<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的修仙路</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-13T07:48:23.655Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>风尘</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>codeforces education Round 85</title>
    <link href="http://yoursite.com/2020/04/13/codeforces%20education%20Round%2085/"/>
    <id>http://yoursite.com/2020/04/13/codeforces%20education%20Round%2085/</id>
    <published>2020-04-13T07:40:59.252Z</published>
    <updated>2020-04-13T07:48:23.655Z</updated>
    
    <content type="html"><![CDATA[<h2 id="codeforces-education-Round-85"><a href="#codeforces-education-Round-85" class="headerlink" title="codeforces education Round 85"></a>codeforces education Round 85</h2><p>摘自百度百科：<br><strong>很多C++的初学者可能会被这个问题困扰，经常出现程序无故超时，最终发现问题处在cin和cout上，（甚至有些老oier也会被这个问题困扰，每次只能打scanf和printf，然后一堆的占位符巨麻烦），这是因为C++中，cin和cout要与stdio同步，中间会有一个缓冲，所以导致cin，cout语句输入输出缓慢，这时就可以用这个语句，取消cin，cout与stdio的同步，说白了就是提速，效率基本与scanf和printf一致。然后就可放心的使用cin，cout了。（不过实际上使用了using namespace std;之后就可以直接打ios::sync_with_stdio(false);了）</strong></p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p><strong>[题目链接点击就进去了]</strong>(<a href="https://codeforces.ml/contest/1334/problem/A" target="_blank" rel="noopener">https://codeforces.ml/contest/1334/problem/A</a>)<br>题意:给你一些统计游戏数据，让你判断，顺序是否合理。<br>ai表示游戏次数，bi表示清楚次数。<br>题解：保证下一次的游戏次数大于等于上一次的游戏次数，并且保证游戏次数的增量会大于等于清楚次数的增量。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n,x,y;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> mx=<span class="number">0</span>,my=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">if</span>(x&lt;mx || y&lt;my || (x-mx)&lt;(y-my))</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">mx=x;my=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p><strong>[题目链接点击就进去了]</strong>(<a href="https://codeforces.ml/contest/1334/problem/B" target="_blank" rel="noopener">https://codeforces.ml/contest/1334/problem/B</a>)<br>题意：有n个人，他们每个人有ai的钱，政府制定了一个中产阶级指标T，如果超过这个数则为中产阶级，政府想要有更多的中产阶级，可以将那些超过中产指标的人的钱分给那些没有达到中产阶级水平的人，使他们达到中产阶级。问最多可以让多少人达到中产阶级水平。</p><p>题解：对人的钱sort一下，如果最大值会小于T的话直接输出0。否则对，这些sum求和，然后除以人数，如果会大于T的话更新最大人数。</p><p><strong>坑点：注意sum要开ll</strong></p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> t,n,x;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;x;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">sum += a[i];</span><br><span class="line"><span class="keyword">if</span>(sum*<span class="number">1.0</span>/i&gt;=x) cnt=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;cnt&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p><strong>[题目链接点击就进去了]</strong>(<a href="https://codeforces.ml/contest/1334/problem/C" target="_blank" rel="noopener">https://codeforces.ml/contest/1334/problem/C</a>)<br>题意：杀怪物，怪物们站成一圈。杀一个怪物需要ai枪，并且怪物死后会对下一只怪物造成bi的伤害，问最少需要多少枪才能杀死所有怪物。</p><p>题解：将每一个怪物的血量降到前一只怪物能够杀死范围内然后即为最小。计算c[i]，即为炸完后还需要补刀次数，如果大于0的话就需要补刀了。然后如果c[i]比0大的话，就将答案sum+c[i]，计算完所有后开始判断。<br>如果c[i]&gt;0 的话，减去该次补刀次数，再加上杀死该怪需要次数。否则如果c[i] &lt;= 0表示不需要补刀，直接杀死该怪物就行了。ans每次取最小。</p><p>代码：<br><strong>坑点：这个题卡了个输入输出，所以输入最好是用scanf或者是取消同步缓冲。</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3e5</span>+<span class="number">10</span>;</span><br><span class="line">ll a[maxn],b[maxn],c[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">ll sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">c[i]=a[i]-b[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(c[i]&gt;<span class="number">0</span>)</span><br><span class="line">sum += c[i];</span><br><span class="line">&#125;</span><br><span class="line">c[<span class="number">1</span>]=a[<span class="number">1</span>]-b[n];</span><br><span class="line"><span class="keyword">if</span>(c[<span class="number">1</span>]&gt;<span class="number">0</span>) sum += c[<span class="number">1</span>];</span><br><span class="line">ll ans=<span class="number">1e18</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c[i]&gt;<span class="number">0</span>)</span><br><span class="line">ans=min(ans,sum-c[i]+a[i]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ans=min(ans,sum+a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;codeforces-education-Round-85&quot;&gt;&lt;a href=&quot;#codeforces-education-Round-85&quot; class=&quot;headerlink&quot; title=&quot;codeforces education Round 85&quot;&gt;&lt;/a
      
    
    </summary>
    
    
    
      <category term="c++ match" scheme="http://yoursite.com/tags/c-match/"/>
    
  </entry>
  
  <entry>
    <title>java面向对象小结上</title>
    <link href="http://yoursite.com/2020/04/08/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%B0%8F%E7%BB%93%E4%B8%8A/"/>
    <id>http://yoursite.com/2020/04/08/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%B0%8F%E7%BB%93%E4%B8%8A/</id>
    <published>2020-04-08T03:48:48.524Z</published>
    <updated>2020-04-08T03:53:59.841Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java-小结，内容面向对象上"><a href="#java-小结，内容面向对象上" class="headerlink" title="java 小结，内容面向对象上"></a>java 小结，内容面向对象上</h1><h2 id="关于重载"><a href="#关于重载" class="headerlink" title="关于重载"></a>关于重载</h2><p>重载：如果同一个类中包含了两个或两个以上方法的方法名相同，但是形参列表不同，则称方法为重载。<br>比如计算圆和三角形的面积，都同时用area方法计算，这个时候就可以重载。</p><p>以下为代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package hello;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">The_area</span> &#123;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Area</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b,<span class="keyword">double</span> c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> p = (a+b+c)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">double</span> ans = Math.<span class="built_in">sqrt</span>(p*(p-a)*(p-b)*(p-c));</span><br><span class="line">System.out.println(<span class="string">"the area is "</span> + ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Area</span><span class="params">(<span class="keyword">double</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> ans = Math.PI*r*r;</span><br><span class="line">System.out.println(<span class="string">"the area is "</span> + ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">The_area t = <span class="keyword">new</span> The_area();</span><br><span class="line">t.Area(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">The_area c = <span class="keyword">new</span> The_area();</span><br><span class="line">c.Area(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于隐藏和封装"><a href="#关于隐藏和封装" class="headerlink" title="关于隐藏和封装"></a>关于隐藏和封装</h2><p>访问控制符，拉的第一个可能略有点丑。。。</p><table><thead><tr><th></th><th>private</th><th>default</th><th>protected</th><th>public</th></tr></thead><tbody><tr><td>同一个类中</td><td>V</td><td>V</td><td>V</td><td>V</td></tr><tr><td>同一个包中</td><td></td><td>V</td><td>V</td><td>V</td></tr><tr><td>子类中</td><td></td><td></td><td>V</td><td>V</td></tr><tr><td>全局范围内</td><td></td><td></td><td></td><td>V</td></tr><tr><td>这个是控制符的访问级别</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>关于封装：指的是将对象的状态信息隐藏在对象内部，不允许外部程序直接访问对象内部信息，而是通过方法来实现对内部信息的操作和访问。</p><p>以下是一个关于封装的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(name.length()&gt;<span class="number">6</span> || name.length()&lt;<span class="number">2</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"您设置的人名不符合要求"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(age&gt;<span class="number">100</span> || age&lt;<span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"您设置的年龄不合法"</span>);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Person();</span><br><span class="line"><span class="comment">//p.age = 10;该语句错误，因为类的成员变量被隐藏了，不能这么访问</span></span><br><span class="line">p.setAge(<span class="number">1000</span>);</span><br><span class="line">System.out.println(<span class="string">"the age is "</span> + p.getAge());</span><br><span class="line">p.setAge(<span class="number">30</span>);</span><br><span class="line">p.setName(<span class="string">"weige"</span>);</span><br><span class="line">System.out.println(<span class="string">"name: "</span> + p.getName() + <span class="string">"age"</span> + p.getAge());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于构造器"><a href="#关于构造器" class="headerlink" title="关于构造器"></a>关于构造器</h2><p>一般使用构造器来在创建对象时执行初始化，比如，以下，这样可以更好的实现封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Me</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> String name;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> high;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Me</span><span class="params">(String name,<span class="keyword">int</span> age,<span class="keyword">int</span> high)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line"><span class="keyword">this</span>.high = high;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">About_me</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Me w = <span class="keyword">new</span> Me(<span class="string">"weige"</span>,<span class="number">19</span>,<span class="number">180</span>);</span><br><span class="line">System.out.printf(<span class="string">"%s %d %d"</span>,w.name,w.age,w.high);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于继承"><a href="#关于继承" class="headerlink" title="关于继承"></a>关于继承</h2><p><strong>java的继承具有单继承的特点，即每个子类只有继承一个父类</strong></p><p>以下是继承的实例，</p><p>示例1:</p><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"心脏跳动……"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">breathe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">beat();</span><br><span class="line">System.out.println(<span class="string">"吸一口气，吐一口气，呼吸中"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BBird</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"我在天空自在的飞翔"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Wolf</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"我在陆地上快速的奔跑"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InheritTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">BBird b = <span class="keyword">new</span> BBird();</span><br><span class="line">b.breathe();</span><br><span class="line">b.fly();</span><br><span class="line">Wolf w = <span class="keyword">new</span> Wolf();</span><br><span class="line">w.breathe();</span><br><span class="line">w.run();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子类继承父类示例2:<br><strong>可以调用父类的构造器，来初始化</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> win_java;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vehicle</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> speed;</span><br><span class="line">String kind;</span><br><span class="line">String color;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Vehicle</span><span class="params">(<span class="keyword">double</span> s,String k,String c)</span> </span>&#123;</span><br><span class="line">speed = s;</span><br><span class="line">kind = k;</span><br><span class="line">color = c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setKind</span><span class="params">(String kind)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.kind = kind;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColor</span><span class="params">(String color)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSpeed</span><span class="params">(<span class="keyword">double</span> speed)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.speed = speed;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getSpeed</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> speed;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getKind</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> kind;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getColor</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span> <span class="keyword">extends</span> <span class="title">Vehicle</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> passenger;</span><br><span class="line"></span><br><span class="line">Car(<span class="keyword">double</span> s,String k,String c,<span class="keyword">int</span> p) &#123;</span><br><span class="line"><span class="keyword">super</span>(s,k,c);</span><br><span class="line">passenger = p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">get_seats</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"the car owns "</span> + passenger + <span class="string">"seats"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Car mycar = <span class="keyword">new</span> Car(<span class="number">300</span>,<span class="string">"卡车"</span>,<span class="string">"red"</span>,<span class="number">5</span>);</span><br><span class="line">mycar.setColor(<span class="string">"black"</span>);</span><br><span class="line">mycar.setSpeed(<span class="number">350</span>);</span><br><span class="line">System.out.println(mycar.getColor());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>调用父类构造器来初始化</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">double</span> size;</span><br><span class="line"><span class="keyword">public</span> String name;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Base</span><span class="params">(<span class="keyword">double</span> size,String name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.size = size;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sub</span> <span class="keyword">extends</span> <span class="title">Base</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String color;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Sub</span><span class="params">(<span class="keyword">double</span> size,String name,String color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(size,name);</span><br><span class="line"><span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getColor</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> Sub(<span class="number">5.6</span>,<span class="string">"调试对象"</span>,<span class="string">"红色"</span>);</span><br><span class="line">System.out.println(s.getSize() + s.getName() + s.getColor());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>java引用变量有两个类型：一个是编译时类型，一个是运行时类型。编译时类型由声明该变量时使用的类型决定，而运行时类型由实际赋给该变量的对象决定。如果编译时类型和运行时类型不一致时出现<strong>多态</strong>现象，得注意。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> book = <span class="number">6</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">base</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"父类的普通方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"父类被覆盖的方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String book =<span class="string">"java入门"</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"子类的覆盖父类的方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sub</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"子类的普通方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">BaseClass bc = <span class="keyword">new</span> BaseClass();</span><br><span class="line">System.out.println(bc.book);</span><br><span class="line">bc.base();</span><br><span class="line">bc.test();</span><br><span class="line"><span class="comment">//编译时类型和运行时类型完全一样所以不存在多态</span></span><br><span class="line">SubClass sc = <span class="keyword">new</span> SubClass();</span><br><span class="line">System.out.println(sc.book);</span><br><span class="line"><span class="comment">//输出了java入门</span></span><br><span class="line"><span class="comment">//从父类继承base方法</span></span><br><span class="line">sc.base();</span><br><span class="line"><span class="comment">//执行当前类的test方法，此时多态发生，因为同时使用了父类，也运用了子类</span></span><br><span class="line">sc.test();</span><br><span class="line"><span class="comment">//编译时和类型不一样，多态发生</span></span><br><span class="line">BaseClass pBc = <span class="keyword">new</span> SubClass();</span><br><span class="line">System.out.println(pBc.book);</span><br><span class="line"><span class="comment">//输出了6</span></span><br><span class="line">pBc.base();</span><br><span class="line"><span class="comment">//父类的普通方法</span></span><br><span class="line">pBc.test();</span><br><span class="line"><span class="comment">//输出了子类的覆盖父类的方法</span></span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="组合实现复用两种方式吧"><a href="#组合实现复用两种方式吧" class="headerlink" title="组合实现复用两种方式吧"></a>组合实现复用两种方式吧</h2><p><strong>way1</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"心脏跳动……"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">breathe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">beat();</span><br><span class="line">System.out.println(<span class="string">"吸一口气，吐一口气，呼吸中"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BBird</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"我在天空自在的飞翔"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Wolf</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"我在陆地上快速的奔跑"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InheritTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">BBird b = <span class="keyword">new</span> BBird();</span><br><span class="line">b.breathe();</span><br><span class="line">b.fly();</span><br><span class="line">Wolf w = <span class="keyword">new</span> Wolf();</span><br><span class="line">w.breathe();</span><br><span class="line">w.run();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>way2</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"心脏跳动……"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">breathe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">beat();</span><br><span class="line">System.out.println(<span class="string">"吸一口气，吐一口气，呼吸中……"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Birdd</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> Animal a;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Birdd</span><span class="params">(Animal a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.a = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">breathe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">a.breathe();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"我在天空自在的飞翔……"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Wolff</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> Animal a;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Wolff</span><span class="params">(Animal a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.a = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">breathe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">a.breathe();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"我在陆地上快速奔跑"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CompositeTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">var</span> a1 = <span class="keyword">new</span> Animal();</span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> Birdd(a1);</span><br><span class="line">b.breathe();</span><br><span class="line">b.fly();</span><br><span class="line"><span class="keyword">var</span> a2 = <span class="keyword">new</span> Animal();</span><br><span class="line"><span class="keyword">var</span> w = <span class="keyword">new</span> Wolff(a2);</span><br><span class="line">w.breathe();</span><br><span class="line">w.run();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><p>抽象方法必须使用abstract修饰符来定义，抽象类可以没抽象方法</p><p>注意：<br>总结就是：抽象类可用<strong>有得有失</strong>来总结，<strong>得</strong>就是，抽象类可以包含抽象方法，<strong>失</strong>就是抽象类不能用于创建实例。</p><p>抽象类示例</p><p><strong>示例1</strong><br>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> radius,length,width,height;</span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">vol</span><span class="params">()</span></span>;</span><br><span class="line">Shape(<span class="keyword">double</span> r,<span class="keyword">double</span> h)&#123;</span><br><span class="line">radius = r;</span><br><span class="line">height = h;</span><br><span class="line">&#125;</span><br><span class="line">Shape(<span class="keyword">double</span> l,<span class="keyword">double</span> w,<span class="keyword">double</span> h)&#123;</span><br><span class="line">length = l;</span><br><span class="line">width = w;</span><br><span class="line">height = h;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">extends</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line">Circle(<span class="keyword">double</span> r,<span class="keyword">double</span> h)&#123;</span><br><span class="line"><span class="keyword">super</span>(r,h);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">vol</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">3.1416</span>*radius*radius*height;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span> <span class="keyword">extends</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span><span class="params">(<span class="keyword">double</span> l,<span class="keyword">double</span> w,<span class="keyword">double</span> h)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line"><span class="keyword">super</span>(l,w,h);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">vol</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> length*width*height;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractClassDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="keyword">new</span> Circle(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">System.out.println(c.vol());</span><br><span class="line"><span class="keyword">var</span> r = <span class="keyword">new</span> Rectangle(<span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">System.out.println(r.vol());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例2</strong><br>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Commonn</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">double</span> price,amount;</span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">calculate</span><span class="params">()</span></span>;</span><br><span class="line">Commonn(<span class="keyword">double</span> p,<span class="keyword">double</span> a) &#123;</span><br><span class="line">price = p;</span><br><span class="line">amount = a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Summer</span> <span class="keyword">extends</span> <span class="title">Commonn</span></span>&#123;</span><br><span class="line">Summer(<span class="keyword">double</span> price,<span class="keyword">double</span> amount)&#123;</span><br><span class="line"><span class="keyword">super</span>(price,amount);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calculate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> price*amount;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Winter</span> <span class="keyword">extends</span> <span class="title">Commonn</span></span>&#123;</span><br><span class="line">Winter(<span class="keyword">double</span> price,<span class="keyword">double</span> amount)&#123;</span><br><span class="line"><span class="keyword">super</span>(price,amount);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calculate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> price*(amount+<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">abst_learning</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Summer s = <span class="keyword">new</span> Summer(<span class="number">0.49</span>,<span class="number">125</span>);</span><br><span class="line">System.out.println(<span class="string">"summer "</span> + s.calculate());</span><br><span class="line">Winter w = <span class="keyword">new</span> Winter(<span class="number">0.49</span>,<span class="number">125</span>);</span><br><span class="line">System.out.println(<span class="string">"Winter "</span> + w.calculate());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基础概念还是得多用，实际操作可能会出现不同的意想不到的结局，比如同一个package内不能存在名字相同的类，比如在同一个class 中不能用public修饰的细节，<strong>路漫漫其修远兮。。。bug慢慢理。。。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;java-小结，内容面向对象上&quot;&gt;&lt;a href=&quot;#java-小结，内容面向对象上&quot; class=&quot;headerlink&quot; title=&quot;java 小结，内容面向对象上&quot;&gt;&lt;/a&gt;java 小结，内容面向对象上&lt;/h1&gt;&lt;h2 id=&quot;关于重载&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="java面向对象编程" scheme="http://yoursite.com/categories/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>训练_递推_递归</title>
    <link href="http://yoursite.com/2020/04/06/%E8%AE%AD%E7%BB%83_%E9%80%92%E6%8E%A8_%E9%80%92%E5%BD%92/"/>
    <id>http://yoursite.com/2020/04/06/%E8%AE%AD%E7%BB%83_%E9%80%92%E6%8E%A8_%E9%80%92%E5%BD%92/</id>
    <published>2020-04-06T02:37:22.759Z</published>
    <updated>2020-04-06T02:39:42.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="训练-递推-递归"><a href="#训练-递推-递归" class="headerlink" title="训练/递推/递归"></a>训练/递推/递归</h2><p>递归前先了解一个全排列问题。<br>就是生成一个全排列</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">11</span>;</span><br><span class="line"><span class="keyword">int</span> n,p[maxn],h[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generateP</span><span class="params">(<span class="keyword">int</span> index)</span><span class="comment">//index表示已经添加了多少位数 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(index==n+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;p[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>;x&lt;=n;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(h[x]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">p[index]=x;<span class="comment">//给每个全排列添加，x </span></span><br><span class="line">h[x]=<span class="number">1</span>;<span class="comment">//表示x已经添加过 </span></span><br><span class="line">generateP(index+<span class="number">1</span>);<span class="comment">//递归 </span></span><br><span class="line">h[x]=<span class="number">0</span>;<span class="comment">//递归完毕后无其它结果，回溯 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">generateP(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后其实用algorithm头文件下的东西也可以很简单生成全排列，就是一个比较简单的递归思维</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">a[i]=i;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="keyword">while</span>(next_permutation(a+<span class="number">1</span>,a+n+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>一道DFS深度优先搜索题<br>题目链接</p><h2 id="洛谷P1135"><a href="#洛谷P1135" class="headerlink" title="洛谷P1135"></a><a href="https://www.luogu.com.cn/problem/P1135" target="_blank" rel="noopener">洛谷P1135</a></h2><p>题意：有n层楼，现在在a楼目标去b楼需要计算a楼去b楼的最短操作次数。每次操作可操作在a楼的一个数k[a]，上升k[a]或下降k[a]<br><del>BFS其实也能过，</del><br>题解:<br>BFS广度搜索<br>队列存有当前位置，还有走到当前位置的步数<br>将第一个位置进队列，将此处标记上走过，然后从这个位置有向下或者向下，向上走k[a]层后，在当前走过的步数前提下+1，并且将次层标记为1，防止死循环<br>另一种情况，在当前位置向下走k[a]个阶梯，当前走过的步数+1，并将此层标记为1，防止死循环。当队首元素为目标层后退出循环，求得。</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">floor</span>;</span><br><span class="line"><span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> n,a,b;</span><br><span class="line"><span class="keyword">int</span> k[<span class="number">207</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">207</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;k[i];</span><br><span class="line">node e1,e2;</span><br><span class="line">e1.<span class="built_in">floor</span> = a;</span><br><span class="line">vis[a] = <span class="number">1</span>;</span><br><span class="line">e1.step = <span class="number">0</span>;</span><br><span class="line">q.push(e1);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">e2 = q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">if</span>(e2.<span class="built_in">floor</span>==b) <span class="keyword">break</span>;</span><br><span class="line">i=e2.<span class="built_in">floor</span>+k[e2.<span class="built_in">floor</span>];</span><br><span class="line"><span class="keyword">if</span>(i&lt;=n &amp;&amp; !vis[i])</span><br><span class="line">&#123;</span><br><span class="line">e1.<span class="built_in">floor</span> = i;</span><br><span class="line">e1.step = e2.step+<span class="number">1</span>;</span><br><span class="line">q.push(e1);</span><br><span class="line">vis[i]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">i=e2.<span class="built_in">floor</span>-k[e2.<span class="built_in">floor</span>];</span><br><span class="line"><span class="keyword">if</span>(i&gt;=<span class="number">1</span> &amp;&amp; !vis[i])</span><br><span class="line">&#123;</span><br><span class="line">e1.<span class="built_in">floor</span> = i;</span><br><span class="line">e1.step = e2.step+<span class="number">1</span>;</span><br><span class="line">q.push(e1);</span><br><span class="line">vis[i]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(e2.<span class="built_in">floor</span>==b) <span class="built_in">cout</span>&lt;&lt;e2.step&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DFS题当然是用来训练深搜的<br>题解：<br>深搜一个now表示当前到达楼层，一个sum表示总次数，然后vis数组表示走未走过，无出路是记得回溯，回归为0状态即可</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n,a,b,sum;</span><br><span class="line"><span class="keyword">int</span> k[<span class="number">207</span>],vis[<span class="number">207</span>];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">100000</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> sum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> dx;</span><br><span class="line">vis[now]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(now==b)ans=min(ans,sum);</span><br><span class="line">dx = now+k[now];</span><br><span class="line"><span class="keyword">if</span>(dx&lt;=n &amp;&amp; !vis[dx])</span><br><span class="line">dfs(dx,sum+<span class="number">1</span>);</span><br><span class="line">dx = now-k[now];</span><br><span class="line"><span class="keyword">if</span>(dx&gt;=<span class="number">1</span> &amp;&amp; !vis[dx])</span><br><span class="line">dfs(dx,sum+<span class="number">1</span>);</span><br><span class="line">vis[now]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line">dfs(a,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(ans==<span class="number">100000</span>)<span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>朴素的DFS注意变换起始位置即可<br>题目链接</p><h2 id="洛谷P1036"><a href="#洛谷P1036" class="headerlink" title="洛谷P1036"></a><a href="https://www.luogu.com.cn/problem/P1036" target="_blank" rel="noopener">洛谷P1036</a></h2><p>题目思路，每次改变位置计算到的位置dfs吧<br>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>(i=<span class="number">2</span>;i*i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(n%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k,ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> sum,<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(num==k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(isprime(sum) ans++;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=start;i&lt;=n;i++)</span><br><span class="line">dfs(num+<span class="number">1</span>,sum+a[i],i+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">dfs(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>洛谷P1057<br>题目链接</p><h2 id="洛谷P1057"><a href="#洛谷P1057" class="headerlink" title="洛谷P1057"></a><a href="https://www.luogu.com.cn/problem/P1057" target="_blank" rel="noopener">洛谷P1057</a></h2><p>解法记忆化搜索<br>//不太会。。。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">31</span>][<span class="number">31</span>],n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f[s][c]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(c==m &amp;&amp; s==<span class="number">1</span>)</span><br><span class="line">f[s][c]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(c!=m)&#123;</span><br><span class="line"><span class="keyword">if</span>(f[s%n+<span class="number">1</span>][c+<span class="number">1</span>]==<span class="number">-1</span>) dfs(s%n+<span class="number">1</span>,c+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(f[s!=<span class="number">1</span>?s<span class="number">-1</span>:n][c+<span class="number">1</span>]==<span class="number">-1</span>) dfs(s!=<span class="number">1</span>?s<span class="number">-1</span>:n,c+<span class="number">1</span>);</span><br><span class="line">f[s][c]=f[s%n+<span class="number">1</span>][c+<span class="number">1</span>]+f[s!=<span class="number">1</span>?s<span class="number">-1</span>:n][c+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;f[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="洛谷P2513"><a href="#洛谷P2513" class="headerlink" title="洛谷P2513"></a><a href="https://www.luogu.com.cn/problem/P2513" target="_blank" rel="noopener">洛谷P2513</a></h2><p>思路：<br>//dp不太会<br>以下仅是70分的暴力dp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1005</span>][<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">0</span>;p&lt;=k;p++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i<span class="number">-1</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">f[i][p+j] += f[i<span class="number">-1</span>][p];</span><br><span class="line">f[i][p+j] %= mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;f[n][k];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;训练-递推-递归&quot;&gt;&lt;a href=&quot;#训练-递推-递归&quot; class=&quot;headerlink&quot; title=&quot;训练/递推/递归&quot;&gt;&lt;/a&gt;训练/递推/递归&lt;/h2&gt;&lt;p&gt;递归前先了解一个全排列问题。&lt;br&gt;就是生成一个全排列&lt;/p&gt;
&lt;figure class=
      
    
    </summary>
    
    
    
      <category term="oj_learing" scheme="http://yoursite.com/tags/oj-learing/"/>
    
  </entry>
  
  <entry>
    <title>codeforces Round630 div2</title>
    <link href="http://yoursite.com/2020/04/01/codeforces%20Round630%20div2/"/>
    <id>http://yoursite.com/2020/04/01/codeforces%20Round630%20div2/</id>
    <published>2020-04-01T07:22:03.383Z</published>
    <updated>2020-04-01T07:23:07.478Z</updated>
    
    <content type="html"><![CDATA[<p><strong>codeforces Round630 div2</strong></p><p><strong>[题目链接点击就进去了]</strong>(<a href="https://codeforces.ml/blog/entry/75432" target="_blank" rel="noopener">https://codeforces.ml/blog/entry/75432</a>)</p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意：已知一个范围x1，y1，x2，y2，还有初始的位置x，y要走左a步，右b步，上c步，下d步，走过这么多步后如果还在范围内的话，则输出Yes，否则输出No，</p><p>题解：左右，上下往返走抵消一部分，然后抵消后看是否还在范围之内。注意特殊情况，就是走不动的情况x1=x2且a，b存在大于0，或y1=y2时，存在c或d大于0，都不存在解</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">int</span> a,b,c,d;</span><br><span class="line"><span class="keyword">int</span> x,y,x1,y1,x2,y2;</span><br><span class="line"><span class="keyword">int</span> tx,ty;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2;</span><br><span class="line">tx = b-a;</span><br><span class="line">ty = d-c;</span><br><span class="line"><span class="keyword">if</span>(x1==x2 &amp;&amp; (a&gt;<span class="number">0</span> || b&gt;<span class="number">0</span>))</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(y1==y2 &amp;&amp; (c&gt;<span class="number">0</span> || d&gt;<span class="number">0</span>))</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tx+x&lt;=x2 &amp;&amp; tx+x&gt;=x1 &amp;&amp; ty+y&gt;=y1 &amp;&amp; ty+y&lt;=y2)</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意：<br>给这1000个数染色，要求相同颜色的数的 gcd&gt;1 然后颜色的种类数不能超过11，并且假如你用了m种颜色，那么1~m中的任意一种颜色都要至少被使用一次；</p><p>题解:<br>看数据范围，数据范围是1000，平方小于1000个数分解完，只有11个质因数，31*31=961，将质因数相同的数字分为一类就可以了。</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">11</span>]=&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">23</span>,<span class="number">29</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">12</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1005</span>],color[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">11</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]%p[j]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[j])</span><br><span class="line">vis[j]=++temp;</span><br><span class="line">color[i]=vis[j];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;temp&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;color[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没参赛就先补到这吧，英语有点弱。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;codeforces Round630 div2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[题目链接点击就进去了]&lt;/strong&gt;(&lt;a href=&quot;https://codeforces.ml/blog/entry/75432&quot; target=&quot;_
      
    
    </summary>
    
    
    
      <category term="c++ match" scheme="http://yoursite.com/tags/c-match/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://yoursite.com/2020/03/29/test/"/>
    <id>http://yoursite.com/2020/03/29/test/</id>
    <published>2020-03-29T05:02:18.704Z</published>
    <updated>2020-03-29T09:33:39.667Z</updated>
    
    <content type="html"><![CDATA[<p>this is a article！</p><object data="./test/test.pdf" type="application/pdf" width="100%" height="877px"><p>(% pdf test.pdf %)<br>[点我，这里是PDF文档]<div class="row">    <embed src="test.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;this is a article！&lt;/p&gt;
&lt;object data=&quot;./test/test.pdf&quot; type=&quot;application/pdf&quot; width=&quot;100%&quot; height=&quot;877px&quot;&gt;

&lt;p&gt;(% pdf test.pdf %)&lt;br&gt;[点我，这
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>多项式数据拟合</title>
    <link href="http://yoursite.com/2020/03/29/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/"/>
    <id>http://yoursite.com/2020/03/29/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/</id>
    <published>2020-03-29T05:02:18.704Z</published>
    <updated>2020-04-01T02:51:12.758Z</updated>
    
    <content type="html"><![CDATA[<h2 id="多项式数据拟合"><a href="#多项式数据拟合" class="headerlink" title="多项式数据拟合"></a>多项式数据拟合</h2><p><strong>关于多项式拟合操作的一个文档，可以用于建模拟合数据，预测数据使用。</strong></p><object data="./多项式数据拟合/多项式数据拟合.pdf" type="application/pdf" width="100%" height="877px"><div class="row">    <embed src="多项式数据拟合.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;多项式数据拟合&quot;&gt;&lt;a href=&quot;#多项式数据拟合&quot; class=&quot;headerlink&quot; title=&quot;多项式数据拟合&quot;&gt;&lt;/a&gt;多项式数据拟合&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;关于多项式拟合操作的一个文档，可以用于建模拟合数据，预测数据使用。&lt;/strong&gt;
      
    
    </summary>
    
    
    
      <category term="建模" scheme="http://yoursite.com/tags/%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>牛客练习赛60</title>
    <link href="http://yoursite.com/2020/03/28/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B60/"/>
    <id>http://yoursite.com/2020/03/28/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B60/</id>
    <published>2020-03-28T09:12:29.877Z</published>
    <updated>2020-03-28T09:15:26.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="牛客练习赛60"><a href="#牛客练习赛60" class="headerlink" title="牛客练习赛60"></a>牛客练习赛60</h2><p><a href="https://ac.nowcoder.com/acm/contest/4853" target="_blank" rel="noopener">题目链接点击就进去了</a></p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意：<br>直接看图吧<br><img src="https://img-blog.csdnimg.cn/20200328165135787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MzA0MQ==,size_16,color_FFFFFF,t_70#pic_center" alt="A"><br>暴力代码显然是不行的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line">ll a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">ll sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">sum += a[i];</span><br><span class="line">&#125;</span><br><span class="line">ll t=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">t+= a[i]&amp;a[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sum += <span class="number">2</span>*t;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>正解：</strong>将每一个数的二进制位分格出来，只有二进制为1是才会有贡献，从高位计算进制位为1的数然后计算次数k，k*k就是这个位置的贡献了，计算求和即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> a[maxn][<span class="number">66</span>]=&#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">ll t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(t)&#123;</span><br><span class="line"><span class="keyword">if</span>(t%<span class="number">2</span>) a[i][k] = <span class="literal">true</span>;</span><br><span class="line">t /= <span class="number">2</span>;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">32</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j][i]) k++;</span><br><span class="line">&#125;</span><br><span class="line">t = <span class="built_in">pow</span>(<span class="number">2</span>,i);</span><br><span class="line">ans = ans+k*k*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意：给n个点的坐标，问它能组成的所有三角形的周长之和是多少。根据题目给的定义，每两个点之间距离为d = |xi-xj| + |yi-yj|;</p><p>题解：推出规律，选定两个点，然后选择第三个点时，有n-2种边，然后推导规律易知每条边会出现n-2次，然后直接算就行了</p><p>代码：<strong>注意开ll</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line">ll x[<span class="number">1007</span>],y[<span class="number">1007</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line">ll ans[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x[i]&gt;&gt;y[i];</span><br><span class="line"><span class="keyword">int</span> k=n<span class="number">-2</span>;</span><br><span class="line">ll sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">ll t=<span class="built_in">abs</span>(x[j]-x[i]) + <span class="built_in">abs</span>(y[j]-y[i]);</span><br><span class="line">sum = (sum + t*k)%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>题意：<br>给一个n长度字符串，字符串元素只能为a-z；问其k长度的子串有多少不同种</p><p>题解：不是很明白，dp还得练习呀<br><a href="https://ac.nowcoder.com/acm/problem/blogs/204019" target="_blank" rel="noopener">附上大佬的题解</a></p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e3</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">ll n,k,f[maxn][maxn],pre[maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s+<span class="number">1</span>;</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">f[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=k;j++)</span><br><span class="line">&#123;</span><br><span class="line">f[i][j]=f[i<span class="number">-1</span>][j]+f[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(pre[s[i]]) f[i][j] = f[i][j]-f[pre[s[i]]<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">f[i][j] %= mod;</span><br><span class="line">&#125;</span><br><span class="line">pre[s[i]]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(f[n][k]+mod)%mod&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>题意：已知a，b，c，k，求方程ax+by+cz =k ,的任意一组整数解，题目保证有解，暴力即可了</p><p>题解：设x = k/a；判断temp1 = k - a<em>x;每次让x–；如果temp1==0的话说明这个就是一组解，输出即可，否则对temp1进行拆分，y = temp1/b;temp2=temp1 - y</em>b ;如果temp2%c==0；则这就是一组解</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll a,b,c,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=k/a;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">ll temp=k-a*i;</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=temp/b;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">&#123;</span><br><span class="line">ll k2=temp-b*j;</span><br><span class="line"><span class="keyword">if</span>(k2%c==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;j&lt;&lt;<span class="string">" "</span>&lt;&lt;k2/c&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;牛客练习赛60&quot;&gt;&lt;a href=&quot;#牛客练习赛60&quot; class=&quot;headerlink&quot; title=&quot;牛客练习赛60&quot;&gt;&lt;/a&gt;牛客练习赛60&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/4853&quot;
      
    
    </summary>
    
    
    
      <category term="c++ match" scheme="http://yoursite.com/tags/c-match/"/>
    
  </entry>
  
  <entry>
    <title>cf round629 div3</title>
    <link href="http://yoursite.com/2020/03/28/cf%20round629%20div3/"/>
    <id>http://yoursite.com/2020/03/28/cf%20round629%20div3/</id>
    <published>2020-03-28T03:02:12.603Z</published>
    <updated>2020-03-28T03:03:32.524Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codeforces.ml/contest/1328/" target="_blank" rel="noopener">题目链接点击就进去了</a></p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意：给你两个数，a，b，问最少给a加多少是得a%b==0；</p><p>思路：<br>如果a%b == 0，输出0即可<br>否则输出 b - (a%b)</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//¼ÓËÙcin/cout</span></span><br><span class="line">ll t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">ll a,b;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="keyword">if</span>(a%b==<span class="number">0</span>) <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;b-(a%b)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意：<br>一个字符串n个字母，其中有n-2个a和2个b，问它的第k小的串是什么</p><p>题解：第一个b在倒数第二个位置有1种情况，在倒数第3个位置有2种情况，倒数第4个位置3种情况，确定第一个b，然后再确定第二个<br>等差数列。确定位置b1为x，则第二个b位置为k-(n-x) * (n-x-1) /2的位置上<br>x的位置是靠(n-t) x (n-t-1) / 2会大于k时计算出t，则x=t-1；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n-i&gt;=k)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n+<span class="number">1</span>-j==k || j==i) <span class="built_in">cout</span>&lt;&lt;<span class="string">"b"</span>;</span><br><span class="line"><span class="keyword">else</span><span class="built_in">cout</span>&lt;&lt;<span class="string">"a"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> k -= (n-i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>题意：给你一个很长的3进制数c，分成a和b使得c(i) = ( a(i)+b(i) )%3;且max(a,b)最小。</p><p>题解：<br>首先拆分1，如果给了第一个元素一个1的话，则后面的元素1,2全给第二个元素。结束</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn],c[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="number">2</span> &amp;&amp; !flag)</span><br><span class="line">&#123;</span><br><span class="line">b[i]=<span class="number">1</span>;c[i]=<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i]==<span class="number">2</span> &amp;&amp; flag)</span><br><span class="line">&#123;</span><br><span class="line">b[i]=<span class="number">0</span>;c[i]=<span class="number">2</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i]==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>)&#123;</span><br><span class="line">b[i]=<span class="number">1</span>;c[i]=<span class="number">0</span>;flag++;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">b[i]=<span class="number">0</span>;c[i]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">b[i]=<span class="number">0</span>;c[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cout</span>&lt;&lt;b[i];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) <span class="built_in">cout</span>&lt;&lt;c[i];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codeforces.ml/contest/1328/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接点击就进去了&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;A&quot;&gt;&lt;a href=&quot;#A&quot; class=&quot;headerlink
      
    
    </summary>
    
    
    
      <category term="c++ match" scheme="http://yoursite.com/tags/c-match/"/>
    
  </entry>
  
  <entry>
    <title>cf round 84 div2</title>
    <link href="http://yoursite.com/2020/03/25/cf%20round%2084%20div2/"/>
    <id>http://yoursite.com/2020/03/25/cf%20round%2084%20div2/</id>
    <published>2020-03-25T05:15:45.767Z</published>
    <updated>2020-03-25T05:17:08.557Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Educational Codeforces Round 84</strong></p><p><strong>赛后补题</strong></p><p><a href="https://codeforces.ml/contest/1327" target="_blank" rel="noopener"><strong>题目点击链接就进去了</strong></a></p><p>A题：<br>题意：输入一个数n，还有一个数k，问能不能将n拆成由k个奇数组成的数<br>比如 6 2；6可以拆成1 5；注意这k个奇数不能相同</p><p>思路：<br><strong>易得结论1:n与k必须同奇偶性</strong>，可以简单证明一下，比如n=11；k=4；时4个奇数相加一定是偶数，它们不同奇偶性，反之也是，比如n=12；k=3；3个奇数相加一定是奇数，所以<strong>得保证，同奇偶性</strong><br><strong>结论2：k*k&lt;=n</strong> 通过等差数列前n项和可以推出，如果超过了则不存在了，（1+（2<em>k-1）</em>k就是k平方，得小于n</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//加速cin/cout</span></span><br><span class="line">ll t,n,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">2</span>==k%<span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(k*k&lt;=n) <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p><strong>一道模拟题</strong><br>题意：有n个公主，然后每个公主有其想要嫁去的国家，一个国家只能接纳一个公主，问如何添加使得嫁出去公主最多。无需添加则输出OPTIMAL，就行了。<br>思路：国家的王子匹配公主，如果王子没被匹配上的话，就给公主匹配上，判断有几个公主匹配上了，如果总数为n，则不用添加匹配了，如果不为n，则得添加，那个没有匹配上的公主，和没有匹配上的国家王子</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">int</span> t,n,k,flag,x,cnt;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],girl[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//加速cin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=<span class="number">0</span>;</span><br><span class="line">girl[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">rep(j,<span class="number">1</span>,k)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(a[x]==<span class="number">0</span> &amp;&amp; flag)&#123;</span><br><span class="line">a[x]=<span class="number">1</span>;</span><br><span class="line">girl[i]=x;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag) cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt!=n)&#123;</span><br><span class="line"><span class="keyword">int</span> ans1=<span class="number">0</span>,ans2=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">if</span>(!girl[i]) ans1=i;</span><br><span class="line"><span class="keyword">if</span>(!a[i]) ans2=i;</span><br><span class="line"><span class="keyword">if</span>(ans1 &amp;&amp; ans2) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"IMPROVE"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans1&lt;&lt;<span class="string">" "</span>&lt;&lt;ans2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"OPTIMAL"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>cf的套路真的是活啊。。。。<br>题意：在一个 N<em>M 的矩阵中，给你 k 个起始点和 k 个目标点，你可以进行移动操作，每次可以让所有起始点向同一个方向移动一格，要让每个点至少走一遍它对应的目标点，总移动次数不超过 2</em>N*M 次。</p><p>题解：走到最左上端，然后来回摆动，奇数往右跑，偶数回来，绝对不超过，2<em>m</em>n次数移动</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//加速cin/cout</span></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line"><span class="keyword">int</span> sx,sy,ex,ey;</span><br><span class="line">rep(i,<span class="number">1</span>,k) <span class="built_in">cin</span>&gt;&gt;sx&gt;&gt;sy;</span><br><span class="line">rep(i,<span class="number">1</span>,k) <span class="built_in">cin</span>&gt;&gt;ex&gt;&gt;ey;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;m<span class="number">-1</span>+n<span class="number">-1</span>+m*n&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,m<span class="number">-1</span>) <span class="built_in">cout</span>&lt;&lt;<span class="string">"L"</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n<span class="number">-1</span>) <span class="built_in">cout</span>&lt;&lt;<span class="string">"U"</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">rep(j,<span class="number">1</span>,m<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>) <span class="built_in">cout</span>&lt;&lt;<span class="string">"R"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"L"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"D"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>E<br><strong>???OEIS???</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Educational Codeforces Round 84&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;赛后补题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://codeforces.ml/contest/1327&quot; target=
      
    
    </summary>
    
    
    
      <category term="c++ match" scheme="http://yoursite.com/tags/c-match/"/>
    
  </entry>
  
  <entry>
    <title>牛客小白月赛23</title>
    <link href="http://yoursite.com/2020/03/25/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B23/"/>
    <id>http://yoursite.com/2020/03/25/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B23/</id>
    <published>2020-03-25T02:29:22.923Z</published>
    <updated>2020-03-25T02:30:56.039Z</updated>
    
    <content type="html"><![CDATA[<h2 id="所有的伟大，都是从最初的平凡开始的。"><a href="#所有的伟大，都是从最初的平凡开始的。" class="headerlink" title="所有的伟大，都是从最初的平凡开始的。"></a><strong>所有的伟大，都是从最初的平凡开始的。</strong></h2><p><a href="https://ac.nowcoder.com/acm/contest/4784" target="_blank" rel="noopener"><strong>题目链接点击就进去了</strong></a></p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意：一个图大小最大为（n行m列）20行100000列，带有*和.的图，每次可以消除a行b列，问采用最佳的消除方式能否把带星星的消除掉。</p><p>题解：dfs暴力，因为只有20行复杂度只是2^20，然后在乘以m，总的复杂度为2 ^ 20 * m,这么暴力竟然过了</p><p>思路：主要思路是dfs，深搜，如果深搜到最后一行的话直接return了，当回溯到最后一行且，<strong>消除的行数达到最大的时候的话,并且这种方式剩下待消灭的列可以被消灭则将标识位flag标记为true</strong>，这个是回溯的源头，也就是有解的标志，如果没达到最后一行的话，就一直，回溯下去，往下一行，继续深搜，如果好了的话就剪枝，如果没好的话就接着回溯，这次already+1，然后给当前行标记上。</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> vis[maxn];</span><br><span class="line"><span class="keyword">char</span> g[<span class="number">21</span>][maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,a,b;</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[j] &amp;&amp; g[j][i]==<span class="string">'*'</span>)&#123;</span><br><span class="line">res++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(res&gt;b) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> already)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(now==n)&#123;</span><br><span class="line"><span class="keyword">if</span>(already==a &amp;&amp; check())&#123;</span><br><span class="line">flag=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">vis[now]=<span class="number">0</span>;</span><br><span class="line">dfs(now+<span class="number">1</span>,already);</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> ;</span><br><span class="line"><span class="keyword">if</span>(already&lt;a)&#123;</span><br><span class="line">vis[now]=<span class="number">1</span>;</span><br><span class="line">dfs(now+<span class="number">1</span>,already+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">flag=<span class="literal">false</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;g[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">dfs(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">cout</span>&lt;&lt;<span class="string">"yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"no"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意：输入p，找出最小的n，使得 n！% p == 0成立。<br>题解：怎么搞呢？？？涉及到知识盲区了……，emmmm，python？<br>对忘了我会python了。。。。。。<br>试一下吧！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">t = <span class="keyword">int</span>(input())</span><br><span class="line">sum = <span class="number">1</span></span><br><span class="line">k = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> t:</span><br><span class="line">    t-=<span class="number">1</span></span><br><span class="line">    sum = <span class="number">1</span></span><br><span class="line">    p = <span class="keyword">int</span>(input())</span><br><span class="line">    <span class="keyword">for</span> i in range(<span class="number">1</span>,p+<span class="number">1</span>):</span><br><span class="line">        sum *= i</span><br><span class="line">        <span class="keyword">if</span> sum%p==<span class="number">0</span> :</span><br><span class="line">            k=i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    print(k)</span><br></pre></td></tr></table></figure><p>这个题有点强把python给卡了，好像的确会卡掉。。。<br><img src="https://img-blog.csdnimg.cn/20200325100621853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MzA0MQ==,size_16,color_FFFFFF,t_70#pic_center" alt="TLE"><br>那下面进入正解吧。<br>思路：类似与素数筛吧，先对p元素进行质因子分解，然后采取二分的方法，l=0，r=p，即可，然后mid，判断它的每个质因子个数，是否，比p的质因数个数多，如果多的话，说明mid偏大了，则右区间左移动，如果少的话，则左区间右移，二分用那个二进制移位比较好，可以防止l+r超出整型的范围。<br>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> p,num[maxn],prime[maxn],k;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n=x,num_prime=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n)&#123;</span><br><span class="line">num_prime+=n/prime[i];</span><br><span class="line">n/=prime[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(num_prime&lt;num[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">k=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//分解P的质因数</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=p;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p%i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">prime[++k]=i;</span><br><span class="line"><span class="keyword">while</span>(p%i==<span class="number">0</span>)&#123;</span><br><span class="line">num[k]++;</span><br><span class="line">p/=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这个是一个细节，如果p是质数的话，就直接把P仍进去就好了</span></span><br><span class="line"><span class="keyword">if</span>(p&gt;<span class="number">1</span>) &#123;</span><br><span class="line">prime[++k]=p;</span><br><span class="line">num[k]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>,r=<span class="number">1e9</span>,ans;</span><br><span class="line"><span class="comment">//二分，judge函数，是判断mid的质因数个数，和p的质因数个数的比较</span></span><br><span class="line"><span class="comment">//这样就可以有效的二分出来</span></span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(judge(mid))&#123;</span><br><span class="line">r=mid<span class="number">-1</span>;</span><br><span class="line">ans=mid;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">l=mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;p;</span><br><span class="line">solve();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>签到题吧……</p><p><a href="https://ac.nowcoder.com/acm/contest/4784/E" target="_blank" rel="noopener">题目链接自己理解E</a><br>永远都是2^32次方吧</p><p>python最短代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">4294967296</span>)</span><br></pre></td></tr></table></figure><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>题意：寻找最大连续子串，<br>比如acbcc 的最大自串是cc ， abc的最大子串是c，helloworld的最大子串是world，然后按题意暴力就行</p><p>题解：暴力，找出最大字母，记录下位置来，然后判断每个最大子串的大小，大的后缀替换掉前面的就行了</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">int</span> pos,cnt,r,l;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> s1,s2;</span><br><span class="line">s1=s.substr(l,s.size()-l);</span><br><span class="line">s2=s.substr(r,s.size()-r);</span><br><span class="line"><span class="keyword">if</span>(s1&gt;s2) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//加速cin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line"><span class="keyword">char</span> c=s[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;s.size();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]&gt;c)&#123;</span><br><span class="line">pos=i;</span><br><span class="line">c=s[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> tl,tr;</span><br><span class="line">l=pos;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=pos+<span class="number">1</span>;i&lt;s.size();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==c)&#123;</span><br><span class="line">r=i;</span><br><span class="line"><span class="keyword">if</span>(!pd(l,r)) l=r;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;s.size();i++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s[i];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p>题意：给一串数字，找出其中差值最大的数来，并输出最大差值<br>我是用set维护，取第一个和最后一个就行了，其实直接min，max统计也行，而且不占内存<br>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//加速cin/cout</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> t;<span class="built_in">cin</span>&gt;&gt;t;st.insert(t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; ::iterator it=st.begin(),ee=st.end();</span><br><span class="line">ee--;</span><br><span class="line"><span class="keyword">int</span> k1=*it,k2=*ee;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;k2-k1&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;所有的伟大，都是从最初的平凡开始的。&quot;&gt;&lt;a href=&quot;#所有的伟大，都是从最初的平凡开始的。&quot; class=&quot;headerlink&quot; title=&quot;所有的伟大，都是从最初的平凡开始的。&quot;&gt;&lt;/a&gt;&lt;strong&gt;所有的伟大，都是从最初的平凡开始的。&lt;/stro
      
    
    </summary>
    
    
    
      <category term="c++ match" scheme="http://yoursite.com/tags/c-match/"/>
    
  </entry>
  
  <entry>
    <title>LIFE</title>
    <link href="http://yoursite.com/2020/03/24/LIFE/"/>
    <id>http://yoursite.com/2020/03/24/LIFE/</id>
    <published>2020-03-23T17:55:33.854Z</published>
    <updated>2020-03-23T17:55:33.854Z</updated>
    
    <content type="html"><![CDATA[<h2 id="许愿墙-吐槽墙-脱单墙-水墙"><a href="#许愿墙-吐槽墙-脱单墙-水墙" class="headerlink" title="许愿墙/吐槽墙/脱单墙/水墙"></a>许愿墙/吐槽墙/脱单墙/水墙</h2><p><strong>有什么话想留给我呢？</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;许愿墙-吐槽墙-脱单墙-水墙&quot;&gt;&lt;a href=&quot;#许愿墙-吐槽墙-脱单墙-水墙&quot; class=&quot;headerlink&quot; title=&quot;许愿墙/吐槽墙/脱单墙/水墙&quot;&gt;&lt;/a&gt;许愿墙/吐槽墙/脱单墙/水墙&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;有什么话想留给我呢？&lt;/st
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>cf_global_round7</title>
    <link href="http://yoursite.com/2020/03/21/cf_global_round7/"/>
    <id>http://yoursite.com/2020/03/21/cf_global_round7/</id>
    <published>2020-03-21T05:50:55.230Z</published>
    <updated>2020-03-21T05:53:46.618Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Codeforces Global Round 7</strong> </p><p><a href="https://codeforces.ml/blog/entry/74961" target="_blank" rel="noopener">题目点击链接就进去了</a></p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意：寻找一个n位数的s,并且s不难被其任何一位数整除，如果不存在输出-1（只有n=1时才不存在）比如239不能被2，或3，或9整除，则当n=3，时239符合。</p><p>题解：<br>大佬教我的方法，if((n-1)%3==0) 输出n-2个2，然后两个3<br>否则直接输出n-1个2和3<br>emmmmmm，一开始不明白，之后发现就是一种凑质数的方法。<br>然后想出了233333333333333，首先输出一个2然后输出n-1个3，大哥NB<br>我发现277777777777777777好像也可以。</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"-1"</span>);<span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">7</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意：已知规则𝑎={0,1,2,0,3} , 𝑏={0−0,1−0,2−1,0−2,3−2}={0,1,1,−2,1}，𝑏𝑖=𝑎𝑖−𝑥𝑖 ，𝑥𝑖=𝑚𝑎𝑥(0,𝑎1,…,𝑎𝑖−1) ，bi为每次ai-xi，xi为a的前i-1项的最大值，现告诉你bi，让你还原ai</p><p>思路：设前最大项m=0，易知a[1]=b[1],a[2]=b[2]+m 然后m=max(m,a[2])<br>,直到最后一项就还原了</p><p>代码:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">a[<span class="number">1</span>]=b[<span class="number">1</span>];</span><br><span class="line">m = a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=b[i]+m;</span><br><span class="line">m = max(m,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>题意：输入个n，和k，然后给1～n的随机排列，这些排列可以按照区间分成k个，问这些区间每段的最大和是多少，还有能构成最大和的划分区间方式有多少种？输出最大和，和划分方式。</p><p>思路：<br>比如：7 3<br>2 7 3 1 5 4 6<br>下标为 1 2 3 4 5 6 7<br>最大和就是前k个数<br>可以划分为区间【1，2 】【3，5】【6，7】或【1，2】【3，6】【7，7】或【1，3】 【4，5】【6，7】或 【1，3】【4，6】【7，7】或【1，4】【5，5】 【6，7】或【1，4】【5，6】【7，7】，易知划分方式就是前k个数位置差的乘积，</p><p>注意！！！：取余仅对第二个数取余，并且得开long long<br>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n,k,ans=<span class="number">1</span>,sum,t;</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; v;</span><br><span class="line">ll mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">ll flag=n-k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">if</span>(t&gt;flag)&#123;</span><br><span class="line">sum+=t;</span><br><span class="line">v.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;v.size();i++)</span><br><span class="line">ans = ans*(v[i]-v[i<span class="number">-1</span>])%mod;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="string">" "</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D1"><a href="#D1" class="headerlink" title="D1"></a>D1</h2><p><strong><del>马拉车？额</del> 暴力吧</strong></p><p>题意：给你个字符串，问从两边开始的最长回文字符子串，思路，如果两端相等，就–，直到不相等，在中间寻找回文串，加上即可。</p><p>题解：感人大暴力<br>回顾几个知识点吧：关于string的<br>string s,temp;<br>temp = s.substr(pos,len) ;表示从pos位置开始向后截取len长度的字符子串，<br>reverse(s.begin(),s.end())，表示反转整个字符串。<br>reverse(s+0,s+6) 表示反转s[0] ~ s[5] 注意左闭右开，然后就行了</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s,str,tl,tr,temp;</span><br><span class="line"><span class="built_in">string</span> ad1,ad2,adl,adr;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pdl</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=r-l;i++)</span><br><span class="line">&#123;</span><br><span class="line">tl=s.substr(l,i);</span><br><span class="line">str=tl;</span><br><span class="line">reverse(str.begin(),str.end());</span><br><span class="line"><span class="keyword">if</span>(tl==str)</span><br><span class="line">adl=tl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pdr</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">temp=s;</span><br><span class="line">reverse(temp.begin(),temp.end());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=r-l;i++)</span><br><span class="line">&#123;</span><br><span class="line">tr=temp.substr(l,i);</span><br><span class="line">str=tr;</span><br><span class="line">reverse(str.begin(),str.end());</span><br><span class="line"><span class="keyword">if</span>(tr==str)</span><br><span class="line">adr=tr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,flag=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line"><span class="keyword">if</span>(s.size()==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">l=<span class="number">0</span>,r=s.size()<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(s[l]==s[r])&#123;</span><br><span class="line"><span class="keyword">while</span>(s[l]==s[r])&#123;</span><br><span class="line">l++;r--;</span><br><span class="line"><span class="keyword">if</span>(l==r || l&gt;r)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>)&#123;</span><br><span class="line">ad1 = s.substr(<span class="number">0</span>,l);</span><br><span class="line">ad2 = ad1;</span><br><span class="line">reverse(ad2.begin(),ad2.end());</span><br><span class="line">pdl();pdr();</span><br><span class="line"><span class="keyword">if</span>(adl.size()&gt;=adr.size())&#123;</span><br><span class="line">str = ad1 + adl + ad2;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">str = ad1 + adr + ad2;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;str&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>)&#123;</span><br><span class="line">pdl();pdr();</span><br><span class="line"><span class="keyword">if</span>(adl.size()&gt;=adr.size())</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;adl&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;adr&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D2"><a href="#D2" class="headerlink" title="D2"></a>D2</h2><p>显然暴力过不了了，补马拉车吧……</p><p>加油！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Codeforces Global Round 7&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://codeforces.ml/blog/entry/74961&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目点击链接
      
    
    </summary>
    
    
    
      <category term="c++ match" scheme="http://yoursite.com/tags/c-match/"/>
    
  </entry>
  
  <entry>
    <title>初级dp</title>
    <link href="http://yoursite.com/2020/03/18/%E5%88%9D%E7%BA%A7dp/"/>
    <id>http://yoursite.com/2020/03/18/%E5%88%9D%E7%BA%A7dp/</id>
    <published>2020-03-18T12:43:14.976Z</published>
    <updated>2020-03-18T12:45:56.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数塔问题："><a href="#数塔问题：" class="headerlink" title="数塔问题："></a>数塔问题：</h2><p>思路：dp数组记录底层，然后每次上一层加上下一层两边的最大值就行了<br>转移方程：<strong>dp [ i ] [ j ] = max(dp[i+1][j] ,dp[i+1][j+1]) + f[i][j]</strong><br>i 是倒序的，从n-1 到 1吧，然后每次j会&lt;=i,回到1</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数塔问题：可以从第一层加至第五层，每次选一层一个数；</span></span><br><span class="line"><span class="comment">// 求路径上数字最大和</span></span><br><span class="line"><span class="comment">//   </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1010</span>;</span><br><span class="line"><span class="keyword">int</span> f[maxn][maxn],dp[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;f[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">dp[n][i]=f[n][i];</span><br><span class="line"><span class="comment">//每次转移至上一层 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">&#123;</span><br><span class="line">dp[i][j]=max(dp[i+<span class="number">1</span>][j],dp[i+<span class="number">1</span>][j+<span class="number">1</span>])+f[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;dp[<span class="number">1</span>][<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最大连续子列和"><a href="#最大连续子列和" class="headerlink" title="最大连续子列和"></a>最大连续子列和</h2><p>思路：每次寻找最大添加该元素后的连续子序列，和当前序列本身<br><strong>转移方程：dp[i] = max(a[i],dp[i-1]+a[i])</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最大连续子列和问题 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1010</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],dp[maxn],n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">dp[<span class="number">1</span>]=a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//状态转移方程</span></span><br><span class="line"><span class="comment">//会等于前一段子序列，和添加当前子序列中的最大值 </span></span><br><span class="line">dp[i]=max(a[i],dp[i<span class="number">-1</span>]+a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">ans=max(ans,dp[i]);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="连续不下降最长子序列LIS："><a href="#连续不下降最长子序列LIS：" class="headerlink" title="连续不下降最长子序列LIS："></a>连续不下降最长子序列LIS：</h2><p>思路：每次让dp[i]的长度为1，然后判断a[i]是否大于a[j]，dp[j]+1是否大于dp[i]如果满足则进行转移，i表示以i结尾的子序列，所以j&lt;i<br>转移方程：if a[i]&gt;a[j] &amp;&amp; dp[j]+1&gt;dp[i] 则进行转移 dp[i]=dp[j+1]</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最长连续不下降子序列 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1010</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],dp[maxn],n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">-1</span>;</span><br><span class="line"><span class="comment">//i表示以i结尾的最长连续不下降子序列 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">dp[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;=a[j] &amp;&amp; dp[j]+<span class="number">1</span>&gt;dp[i])</span><br><span class="line">dp[i]=dp[j]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans=max(ans,dp[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最长公共子序列问题LCS："><a href="#最长公共子序列问题LCS：" class="headerlink" title="最长公共子序列问题LCS："></a>最长公共子序列问题LCS：</h2><p>思路：i表示s1串的前i个字母，j表示s2串的前j个字母，进行判断是有两种可能一种是 <strong>s1[i] == s2[j]，则dp[i+1][j+1]=dp[i][j]+1</strong>, 另一种是s1[i] != s2[j] 的情况，这种情况就是判断 <strong>dp[i+1][j] 和dp[i][j+1]</strong> 的大小，等于之间较大的这样转移方程就出来了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最长公共子序列问题</span></span><br><span class="line"><span class="comment">// 比如sadstory</span></span><br><span class="line"><span class="comment">// adminsorry</span></span><br><span class="line"><span class="comment">// 的最长公共子序列为adsory </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1010</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> s1;</span><br><span class="line"><span class="built_in">string</span> s2;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s1;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s2;</span><br><span class="line"><span class="comment">//  idea：两个分枝：</span></span><br><span class="line"><span class="comment">//当s1[i]==s2[j] 时，长度直接为上一个加一即可 </span></span><br><span class="line"><span class="comment">//  当不等于时 ，判断 dp[i-1][j] 和 dp[i][j-1]之间的大小，大的连接作为最长的子序列 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s1.size();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;s2.size();j++)</span><br><span class="line">&#123;<span class="comment">//每次都同时延长一个长度 </span></span><br><span class="line"><span class="keyword">if</span>(s1[i]==s2[j])</span><br><span class="line">&#123;</span><br><span class="line">dp[i+<span class="number">1</span>][j+<span class="number">1</span>]=dp[i][j]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">dp[i+<span class="number">1</span>][j+<span class="number">1</span>]=max(dp[i][j+<span class="number">1</span>],dp[i+<span class="number">1</span>][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;dp[s1.size()][s2.size()]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="背包问题大合集："><a href="#背包问题大合集：" class="headerlink" title="背包问题大合集："></a>背包问题大合集：</h2><p>01 背包<br>注意for的顺序<br>for i = 0:n-1<br>    for j = W:w[i]<br>状态转移方程 <strong>dp[j] = max(dp[j],dp[j-w[i]]+v[i]);</strong></p><p>完全背包问题<br>for i = 0:n-1<br>    for j = w[i]:W<br>状态转移方程 <strong>dp[j] = max(dp[j],dp[j-w[i]]+v[i]);</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1010</span>;</span><br><span class="line"><span class="keyword">int</span> n,W;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> w[maxn],v[maxn];</span><br><span class="line"><span class="keyword">int</span> ddp[maxn];</span><br><span class="line"></span><br><span class="line"><span class="comment">//o1背包思路</span></span><br><span class="line"><span class="comment">// i表示放第i件物品</span></span><br><span class="line"><span class="comment">// 策略1，不放第i件物品则dp[i+1][j]=dp[i][j];</span></span><br><span class="line"><span class="comment">// 策略2，放第i件物品，然后dp[i+1][j]转换成了前dp[i][j]和dp[i][j-w[i]]+v[i]最大值; </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve01_dp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=W;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j&lt;w[i])</span><br><span class="line">dp[i+<span class="number">1</span>][j]=dp[i][j];</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">dp[i+<span class="number">1</span>][j]=max(dp[i][j],dp[i][j-w[i]]+v[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;dp[n][W]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//完全背包，一件物品可放多次 </span></span><br><span class="line"><span class="comment">//此方法不是很建议，复杂度有点高，但可以优化 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve_all_dp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=W;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k*w[i]&lt;=j;k++)</span><br><span class="line">dp[i+<span class="number">1</span>][j]=max(dp[i+<span class="number">1</span>][j],dp[i][j-k*w[i]]+k*v[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;dp[n][W]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//完全背包优化版与01背包不同之处在于</span></span><br><span class="line"><span class="comment">// 转换dp[i+1][j]放是判断dp[i][j]和dp[i+1][j-w[i]]+v[i]的大小，后面变成了i+1</span></span><br><span class="line"><span class="comment">// 因为可以多放几次 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve_all_dp2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=W;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j&lt;w[i])</span><br><span class="line">dp[i+<span class="number">1</span>][j]=dp[i][j];</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">dp[i+<span class="number">1</span>][j]=max(dp[i][j],dp[i+<span class="number">1</span>][j-w[i]]+v[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//01背包1维数组版</span></span><br><span class="line"><span class="comment">// 注意是逆序枚举j </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve__01dp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=W;j&gt;=w[i];j--)</span><br><span class="line">ddp[j]=max(ddp[j],ddp[j-w[i]]+v[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ddp[W]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 完全背包，顺序枚举j</span></span><br><span class="line"><span class="comment">// 状态转移格式都是 dp[j] = max(dp[j],dp[j-w[i]]+v[i]) </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve__alldp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=w[i];j&lt;=W;j++)</span><br><span class="line">ddp[j]=max(ddp[j],ddp[j-w[i]]+v[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ddp[W]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> max_n,max_v;</span><br><span class="line"><span class="comment">//o1dp的衍生问题，当w特别大时</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//idea:两个分枝：</span></span><br><span class="line"><span class="comment">//前i-1个物品挑选价值总和为j的部分 </span></span><br><span class="line"><span class="comment">//前i-1个物品j-v[i]的部分，然后再选中第i个物品 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;==max_n*max_v;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j&lt;=v[i])</span><br><span class="line">dp[i+<span class="number">1</span>][j]=dp[i][j];</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">dp[i+<span class="number">1</span>][j]=min(dp[i][j],dp[i][j-v[i]]+w[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=max_n*max_v;i++) <span class="keyword">if</span>(dp[n][i]&lt;=w) res=i;</span><br><span class="line"> <span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数塔问题：&quot;&gt;&lt;a href=&quot;#数塔问题：&quot; class=&quot;headerlink&quot; title=&quot;数塔问题：&quot;&gt;&lt;/a&gt;数塔问题：&lt;/h2&gt;&lt;p&gt;思路：dp数组记录底层，然后每次上一层加上下一层两边的最大值就行了&lt;br&gt;转移方程：&lt;strong&gt;dp [ i ]
      
    
    </summary>
    
    
    
      <category term="learning" scheme="http://yoursite.com/tags/learning/"/>
    
  </entry>
  
  <entry>
    <title>洛谷_P5250(普通平衡树!)</title>
    <link href="http://yoursite.com/2020/03/17/%E6%B4%9B%E8%B0%B7_P5250(%E6%99%AE%E9%80%9A%E5%B9%B3%E8%A1%A1%E6%A0%91!)/"/>
    <id>http://yoursite.com/2020/03/17/%E6%B4%9B%E8%B0%B7_P5250(%E6%99%AE%E9%80%9A%E5%B9%B3%E8%A1%A1%E6%A0%91!)/</id>
    <published>2020-03-17T05:02:44.146Z</published>
    <updated>2020-03-17T05:08:42.303Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P5250" target="_blank" rel="noopener">题目链接点击就进去了</a></p><h2 id="洛谷：P5250-【深基17-例5】木材仓库"><a href="#洛谷：P5250-【深基17-例5】木材仓库" class="headerlink" title="洛谷：P5250 【深基17.例5】木材仓库"></a>洛谷：P5250 【深基17.例5】木材仓库</h2><p>然而我的解法没用到树</p><p><strong>REn有感</strong><br>思路就是判断其前后是否有木块，取出相差最小就行了，用set或者用map都可以，不过细节忘处理了一直RE，保持好心态，硬肝，right！！！</p><p>想法：用set维护，因为set是个自动有序的容器，想法如果是1的话直接insert就行了，如果是2的话就得判断了，（1）判断是否存在该元素这种情况直接删除就行了 （2）如果不存在的话就把这个元素插入进去，方便找比这个元素大和比这个元素小的数，然后插进去后，得判断有没有比它大的数，如果没有，则直接输出，比它小的那个元素，再判断有没有比它小的元素，如果没有，直接输出，比它大的元素，然后如果比它大的元素和比它小的元素都存在的话，再次进行判断。<strong>注意插入后记得删除即可</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> t,k;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t&gt;&gt;k;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(st.find(k)!=st.end())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Already Exist"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">st.insert(k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(st.empty())</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Empty"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(st.find(k)!=st.end())&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;k&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">st.erase(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">st.insert(k);</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it1,it2,it3;</span><br><span class="line">it1=st.find(k);</span><br><span class="line">it3=it1;</span><br><span class="line">it2=it1;</span><br><span class="line">it2++;it3--;<span class="comment">//it2值向比k大的那个数，it3指向比k小的那个数</span></span><br><span class="line"><span class="comment">//得判断是否存在那么一个数</span></span><br><span class="line"><span class="keyword">if</span>(it2==st.end())&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;*it3&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">st.erase(*it3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(it1==st.begin())&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;*it2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">st.erase(*it2);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> k1=*it2-k;</span><br><span class="line"><span class="keyword">int</span> k2=k-*it3;</span><br><span class="line"><span class="keyword">if</span>(k1&lt;k2)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;*it2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">st.erase(*it2);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;*it3&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">st.erase(*it3); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">st.erase(*it1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P5250&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接点击就进去了&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;洛谷：P5250-【深基17-例5】木材仓库&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
    
      <category term="oj_learing" scheme="http://yoursite.com/tags/oj-learing/"/>
    
  </entry>
  
  <entry>
    <title>牛客练习赛59</title>
    <link href="http://yoursite.com/2020/03/17/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B59/"/>
    <id>http://yoursite.com/2020/03/17/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B59/</id>
    <published>2020-03-17T03:28:18.754Z</published>
    <updated>2020-03-25T02:30:59.857Z</updated>
    
    <content type="html"><![CDATA[<h2 id="牛客练习赛59"><a href="#牛客练习赛59" class="headerlink" title="牛客练习赛59"></a>牛客练习赛59</h2><p><a href="https://ac.nowcoder.com/acm/contest/4743/" target="_blank" rel="noopener">题目链接点击就进去了</a></p><p>C题：合成装备，有两种合成装备的方法<br>牛牛有x件材料a和y件材料b，(法一：)用2件材料a和3件材料b可以合成一件装备，(法二：)用4件材料a和1件材料b也可以合成一件装备<br>假设合成，n件装备用法一合成，则法二最多生成min( (x-2<em>n)/4,(y-3</em>n) )件，枚举即可得出最佳方案，但枚举复杂度为1e5*1e9/2 肯定会被TLE ，所以，得想办法优化，它存在单调性极值所以，可以采用三分的方法来解决。<br>然后在三分范围内寻找答案，复杂度极大降低了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,r=min(x/<span class="number">2</span>,y/<span class="number">3</span>);</span><br><span class="line"><span class="keyword">while</span>(r-l&gt;<span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> m1=l+(r-l)/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> m2=r-(r-l)/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(m1+min((x<span class="number">-2</span>*m1)/<span class="number">4</span>,y<span class="number">-3</span>*m1))&gt;m2+min((x<span class="number">-2</span>*m2)/<span class="number">4</span>,y<span class="number">-3</span>*m2))</span><br><span class="line">r=m2;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l=m1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">ans=max(ans,i+min((x<span class="number">-2</span>*i)/<span class="number">4</span>,y<span class="number">-3</span>*i));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>D:</p><p>D题应该是个构造规律题吧，<br>观察输赢区间，即奇偶性就行了<br>1       1         输<br>2       3         赢<br>4         6            输<br>7         13        赢<br>14     26        输<br>观察可得为奇时输区间为前一个的两倍，为偶时输区间前部分为前部分两倍-1，后部分为前部分的两倍加1，然后构造出规律，写码即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">const</span> ll maxn=<span class="number">1e18</span>;</span><br><span class="line">ll k;</span><br><span class="line">ll b[<span class="number">1000</span>],e[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stido(0);</span></span><br><span class="line"><span class="comment">//¼ÓËÙcin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">b[<span class="number">1</span>]=<span class="number">1</span>;e[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">b[<span class="number">2</span>]=<span class="number">2</span>;e[<span class="number">2</span>]=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">while</span>(e[i<span class="number">-1</span>]&lt;=maxn)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>)&#123;</span><br><span class="line">b[i]=b[i<span class="number">-1</span>]*<span class="number">2</span>;</span><br><span class="line">e[i]=e[i<span class="number">-1</span>]*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">b[i]=b[i<span class="number">-1</span>]*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">e[i]=e[i<span class="number">-1</span>]*<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>; ;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(k&gt;=b[i] &amp;&amp; k&lt;=e[i])&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>)</span><br><span class="line">pf(<span class="string">"XiaoQiao\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pf(<span class="string">"XiaoHuiHui\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;牛客练习赛59&quot;&gt;&lt;a href=&quot;#牛客练习赛59&quot; class=&quot;headerlink&quot; title=&quot;牛客练习赛59&quot;&gt;&lt;/a&gt;牛客练习赛59&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/4743/
      
    
    </summary>
    
    
    
      <category term="c++ match" scheme="http://yoursite.com/tags/c-match/"/>
    
  </entry>
  
  <entry>
    <title>cf_628_div2</title>
    <link href="http://yoursite.com/2020/03/16/cf_628_div2/"/>
    <id>http://yoursite.com/2020/03/16/cf_628_div2/</id>
    <published>2020-03-16T13:51:35.763Z</published>
    <updated>2020-03-16T13:51:35.764Z</updated>
    
    <content type="html"><![CDATA[<p>题目链接<br><a href="https://codeforces.ml/contest/1325/problem/D" target="_blank" rel="noopener">D</a></p><h2 id="Codeforces-Round-628-Div-2"><a href="#Codeforces-Round-628-Div-2" class="headerlink" title="Codeforces Round #628 (Div.2)"></a>Codeforces Round #628 (Div.2)</h2><p>D,思路：构造公式<br>构造前，先了解几个异或的小知识。</p><p>1) 交换律: a ^ b = b ^ a<br>2) 结合律: a ^ b ^ c = a ^ (b ^ c) = (a^b) ^c<br>可以知道一个结论 d = a ^ b ^ c  –&gt; a = b ^ c ^ d<br>3) 自反性: a ^ b ^ a =b ; a ^ b ^ b = a;</p><p>题意 ：有u , v ；求一最短数组，使得数组元素之和为v,数组元素异或为u;<br>若不存在，则输出-1</p><p>题解开始了，易知 a + b = a ^ b + 2<em>(a&amp;b) 这个构造还是不太会啊<br>令 x = a&amp;b，a+b=v ,a^b=u;则x = (u-v)/2;则[u,x,x]必是其中一组解；现在考虑有没有，比3长度更短的数组，考虑特殊情况，当u&gt;v时，无解，因为等式不成立，当u == v时长度为1，解为u，其它情况，判断[u+x,x]，是否符合条件，则必须满足(u+x+x) = (u+x)&amp;x + (u+x) ^ x –&gt;  (u+x+x) = u ^ x + x + u&amp;x  –&gt; (u+x) = u ^ x + u&amp;x 并且得满足 (u+x) = u ^ x + 2</em>(u&amp;x) 所以 u&amp;x 必须为0 才存在数组长度为二，此时解为[u+x,x]；</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll u,v,x;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//¼ÓËÙcin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v;</span><br><span class="line"><span class="keyword">if</span>(u&gt;v || u%<span class="number">2</span>!=v%<span class="number">2</span>)&#123;</span><br><span class="line">pf(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(u==v)&#123;</span><br><span class="line"><span class="keyword">if</span>(!u)</span><br><span class="line">pf(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pf(<span class="string">"1 %d\n"</span>,u);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">x=(v-u)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(u&amp;x)</span><br><span class="line">pf(<span class="string">"3\n%lld %lld %lld"</span>,u,x,x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pf(<span class="string">"2\n%lld %lld"</span>,(u^x),x);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;题目链接&lt;br&gt;&lt;a href=&quot;https://codeforces.ml/contest/1325/problem/D&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;D&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Codeforces-Round-628-Div-
      
    
    </summary>
    
    
    
      <category term="c++ match" scheme="http://yoursite.com/tags/c-match/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥校内训练赛</title>
    <link href="http://yoursite.com/2020/03/15/%E8%93%9D%E6%A1%A5%E6%A0%A1%E5%86%85%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
    <id>http://yoursite.com/2020/03/15/%E8%93%9D%E6%A1%A5%E6%A0%A1%E5%86%85%E8%AE%AD%E7%BB%83%E8%B5%9B/</id>
    <published>2020-03-15T08:48:26.932Z</published>
    <updated>2020-03-15T08:48:26.933Z</updated>
    
    <content type="html"><![CDATA[<p>蓝桥校内训练赛的总结</p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> n = <span class="number">15.125</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%0lf"</span>,n*<span class="number">1024</span>);</span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>有多少个约数可以用质因数定理，分解出来，比如 n = pow(a,a1)<em>pow(b,a2)…则它总共质因数有(a1+1)</em>(a2+1)个，然而这道题没有这么复杂直接for就行了……</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">int</span> n,t,k,sum=<span class="number">1</span>,nn;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10000</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pp</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">a[k++]=i;</span><br><span class="line"><span class="keyword">while</span>(n%i==<span class="number">0</span>) n/=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n&gt;<span class="number">1</span>) a[k++]=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//¼ÓËÙcin/cout</span></span><br><span class="line">n=<span class="number">1200000</span>;</span><br><span class="line">nn=<span class="number">1200000</span>;</span><br><span class="line">pp(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)</span><br><span class="line">&#123;</span><br><span class="line">t=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(nn%a[i]==<span class="number">0</span>)&#123;</span><br><span class="line"> t++;nn/=a[i];</span><br><span class="line">&#125;</span><br><span class="line">sum=sum*(t+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">pf(<span class="string">"%d\n"</span>,sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>包含9直接判断就行了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> t=x%<span class="number">10</span>;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">9</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//¼ÓËÙcin/cout</span></span><br><span class="line">rep(i,<span class="number">1</span>,<span class="number">2019</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(pd(i))</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">pf(<span class="string">"%d\n"</span>,sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p>一看题我以为是道二叉树的题，然后想着二分……结果是个水题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"2018\n"</span>);</span><br></pre></td></tr></table></figure><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><p>判断是不是数位递增的，可以先取出最后一个数，让其为最大，然后判断前一个数是不是比这个还大，如果前一个数比它大则不是数位递增，否则（else）就emmm直接将前一个数赋值为最大继续判断</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>],sum,n;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mmax=x%<span class="number">10</span>;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">while</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> t=x%<span class="number">10</span>;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(t&gt;mmax)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">mmax=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//?¨®?¨´cin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">if</span>(pd(i))</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">pf(<span class="string">"%d\n"</span>,sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6"><a href="#6" class="headerlink" title="6"></a>6</h2><p>递增数列，数据太小了，直接暴力就行了，我一开始以为得用st表记录下每次查询结果来，一看数据，还是直接暴力吧……（所以看数据范围很主要）<del>猥琐</del> </p><p>题解，直接判断该元素左边有没有比它小大，右边有没有比它大的，如果同时满足，则ok改元素可以，sum++;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e4</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],n;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span> || x==n)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">int</span> kk=a[x];</span><br><span class="line"><span class="keyword">int</span> flag1=<span class="number">0</span>,flag2=<span class="number">0</span>;</span><br><span class="line">dep(i,x<span class="number">-1</span>,<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;kk)&#123;</span><br><span class="line">flag1=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag1)</span><br><span class="line">rep(i,x+<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;kk)&#123;</span><br><span class="line">flag2=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag1 &amp;&amp; flag2)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//¼ÓËÙcin/c## 标题out</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">if</span>(pd(i))</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">pf(<span class="string">"%d\n"</span>,sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7"><a href="#7" class="headerlink" title="7"></a>7</h2><p>记住规则，辅，元，辅，元，这样判断就行了，直接道最后一个，想法很简单</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">'a'</span> || c==<span class="string">'e'</span> || c==<span class="string">'i'</span> || c==<span class="string">'o'</span> || c==<span class="string">'u'</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//¼ÓËÙcin/cout</span></span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line"><span class="keyword">int</span> pos,k,i;</span><br><span class="line"><span class="keyword">int</span> flag1=<span class="number">0</span>,flag2=<span class="number">0</span>,flag3=<span class="number">0</span>,flag4=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;s.size();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!pd(s[i]))&#123;</span><br><span class="line">pos=i;</span><br><span class="line">flag1=<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=pos+<span class="number">1</span>;i&lt;s.size();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(pd(s[i]))&#123;</span><br><span class="line">pos=i;</span><br><span class="line">flag2=<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=pos+<span class="number">1</span>;i&lt;s.size();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!(pd(s[i])))&#123;</span><br><span class="line">pos=i;</span><br><span class="line">flag3=<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=pos+<span class="number">1</span>;i&lt;s.size();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(pd(s[i]))&#123;</span><br><span class="line">pos=i;</span><br><span class="line">flag4=<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag1 &amp;&amp; flag2 &amp;&amp; flag3 &amp;&amp; flag4 &amp;&amp; pos==s.size()<span class="number">-1</span>)</span><br><span class="line">pf(<span class="string">"yes\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pf(<span class="string">"no\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8"><a href="#8" class="headerlink" title="8"></a>8</h2><p>一道很水的bfs题，我以为类似连通块结果不是，反正都是水……<br>思路：<strong>每个月草地会更新一次，周围上下左右都张草，每次记录下（存下来）有草的地方即可，（剪枝小技巧，每次张草后改地方下次不用再张了，因为其四周已经是草了，可以节省算法复杂度）</strong>，然后这些个有草的地方四周都bfs一下就行了（也就是张个草）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1010</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn],vis[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> dd[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> xx;</span><br><span class="line"><span class="keyword">int</span> yy;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a[x][y]==<span class="number">2</span> &amp;&amp; !vis[x][y])&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> dx=x+dd[i][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> dy=y+dd[i][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(dx&gt;=<span class="number">1</span> &amp;&amp; dx&lt;=n &amp;&amp;dy&gt;=<span class="number">1</span> &amp;&amp; dy&lt;=m)</span><br><span class="line">&#123;</span><br><span class="line">a[dx][dy]=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">vis[x][y]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//¼ÓËÙcin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[j<span class="number">-1</span>]==<span class="string">'g'</span>)</span><br><span class="line">a[i][j]=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">a[i][j]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; v;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i][j]==<span class="number">2</span> &amp;&amp; !vis[i][j])&#123;</span><br><span class="line">node temp;temp.xx=i;temp.yy=j;</span><br><span class="line">v.push_back(temp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();i++)</span><br><span class="line">&#123;</span><br><span class="line">bfs(v[i].xx,v[i].yy);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i][j]==<span class="number">2</span>)</span><br><span class="line">pf(<span class="string">"g"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pf(<span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line">pf(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9"><a href="#9" class="headerlink" title="9"></a>9</h2><p><strong>当时提交太快，好像细节忘处理了……<del>还好只是训练赛</del> ，骄兵必败啊</strong><br>思路：每次回溯到上一次，注意它能回溯的前提是每一项小于前两项的差的绝对值，所以可以根据这个条件一直回溯下去，直到i的值大于它两绝对值，之前好像做过类似的……</p><p><strong>不过dfs可能会炸，所以可以根据这个打个表</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a[x][y]!=<span class="number">0</span>) <span class="keyword">return</span> a[x][y];</span><br><span class="line">a[x][y]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="built_in">abs</span>(x-y);i++)</span><br><span class="line">a[x][y]+=dfs(y,i);</span><br><span class="line"><span class="keyword">return</span> a[x][y]%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//¼ÓËÙcin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">sum+=dfs(n,i);</span><br><span class="line">sum%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打表代码<br>打表是一种很有效的办法，处理数量不大的序列，之前貌似在东大camp碰到一个猥琐打表题……，忘补了，<strong>（所以切记，补题，补题）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a[x][y]!=<span class="number">0</span>) <span class="keyword">return</span> a[x][y];</span><br><span class="line">a[x][y]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="built_in">abs</span>(x-y);i++)</span><br><span class="line">a[x][y]=(a[x][y]+dfs(y,i))%mod;</span><br><span class="line"><span class="keyword">return</span> a[x][y]%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//加速cin/cout</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"a[1001]="</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"&#123;0,"</span>;</span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">1</span>;n&lt;=<span class="number">1000</span>;n++)</span><br><span class="line">&#123;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">sum=(sum+dfs(n,i))%mod;</span><br><span class="line">sum%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">30</span>==<span class="number">0</span>)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="string">","</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"&#125;"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>打表ac代码</strong><br>复杂度o（1）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1001</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">26</span>,<span class="number">53</span>,<span class="number">106</span>,<span class="number">220</span>,<span class="number">452</span>,<span class="number">946</span>,<span class="number">1967</span>,<span class="number">4128</span>,<span class="number">8638</span>,<span class="number">8144</span>,<span class="number">8068</span>,<span class="number">26</span>,<span class="number">8127</span>,<span class="number">3542</span>,<span class="number">3277</span>,<span class="number">3278</span>,<span class="number">7643</span>,<span class="number">5433</span>,<span class="number">5774</span>,<span class="number">8217</span>,<span class="number">4846</span>,<span class="number">687</span>,<span class="number">3097</span>,<span class="number">6887</span>,</span><br><span class="line"><span class="number">3556</span>,<span class="number">4840</span>,<span class="number">3454</span>,<span class="number">5378</span>,<span class="number">722</span>,<span class="number">2230</span>,<span class="number">767</span>,<span class="number">1447</span>,<span class="number">1839</span>,<span class="number">4776</span>,<span class="number">7618</span>,<span class="number">7831</span>,<span class="number">6222</span>,<span class="number">5236</span>,<span class="number">7802</span>,<span class="number">5696</span>,<span class="number">1835</span>,<span class="number">1102</span>,<span class="number">9537</span>,<span class="number">1605</span>,<span class="number">1227</span>,<span class="number">3034</span>,<span class="number">2159</span>,<span class="number">1613</span>,<span class="number">6811</span>,<span class="number">3941</span>,<span class="number">6794</span>,<span class="number">5960</span>,<span class="number">4903</span>,<span class="number">75</span>,</span><br><span class="line"><span class="number">2158</span>,<span class="number">349</span>,<span class="number">4258</span>,<span class="number">5189</span>,<span class="number">4717</span>,<span class="number">2894</span>,<span class="number">4193</span>,<span class="number">2890</span>,<span class="number">258</span>,<span class="number">2928</span>,<span class="number">6125</span>,<span class="number">2913</span>,<span class="number">1482</span>,<span class="number">8419</span>,<span class="number">7244</span>,<span class="number">1652</span>,<span class="number">3440</span>,<span class="number">2138</span>,<span class="number">9272</span>,<span class="number">4714</span>,<span class="number">3333</span>,<span class="number">3543</span>,<span class="number">8834</span>,<span class="number">6763</span>,<span class="number">9180</span>,<span class="number">1803</span>,<span class="number">4631</span>,<span class="number">6307</span>,<span class="number">9056</span>,<span class="number">3170</span>,</span><br><span class="line"><span class="number">8339</span>,<span class="number">6213</span>,<span class="number">1176</span>,<span class="number">3258</span>,<span class="number">272</span>,<span class="number">4257</span>,<span class="number">1893</span>,<span class="number">8020</span>,<span class="number">3682</span>,<span class="number">9531</span>,<span class="number">6961</span>,<span class="number">4145</span>,<span class="number">3086</span>,<span class="number">3455</span>,<span class="number">9057</span>,<span class="number">1346</span>,<span class="number">5768</span>,<span class="number">6907</span>,<span class="number">247</span>,<span class="number">2450</span>,<span class="number">4732</span>,<span class="number">8653</span>,<span class="number">8229</span>,<span class="number">842</span>,<span class="number">3346</span>,<span class="number">9671</span>,<span class="number">7106</span>,<span class="number">3561</span>,<span class="number">4952</span>,<span class="number">9539</span>,</span><br><span class="line"><span class="number">1791</span>,<span class="number">6208</span>,<span class="number">6083</span>,<span class="number">8838</span>,<span class="number">7474</span>,<span class="number">6854</span>,<span class="number">198</span>,<span class="number">7300</span>,<span class="number">8219</span>,<span class="number">5912</span>,<span class="number">8884</span>,<span class="number">3976</span>,<span class="number">9650</span>,<span class="number">4821</span>,<span class="number">7317</span>,<span class="number">9720</span>,<span class="number">5572</span>,<span class="number">3834</span>,<span class="number">6326</span>,<span class="number">2281</span>,<span class="number">34</span>,<span class="number">8409</span>,<span class="number">28</span>,<span class="number">445</span>,<span class="number">8155</span>,<span class="number">9846</span>,<span class="number">9944</span>,<span class="number">2504</span>,<span class="number">3954</span>,<span class="number">1639</span>,</span><br><span class="line"><span class="number">7243</span>,<span class="number">8502</span>,<span class="number">6926</span>,<span class="number">1609</span>,<span class="number">7449</span>,<span class="number">3769</span>,<span class="number">5695</span>,<span class="number">6683</span>,<span class="number">7531</span>,<span class="number">6275</span>,<span class="number">5827</span>,<span class="number">6184</span>,<span class="number">1982</span>,<span class="number">736</span>,<span class="number">9718</span>,<span class="number">2777</span>,<span class="number">7688</span>,<span class="number">6626</span>,<span class="number">7456</span>,<span class="number">961</span>,<span class="number">5556</span>,<span class="number">7573</span>,<span class="number">6886</span>,<span class="number">4543</span>,<span class="number">3957</span>,<span class="number">2859</span>,<span class="number">4666</span>,<span class="number">9795</span>,<span class="number">305</span>,<span class="number">9052</span>,</span><br><span class="line"><span class="number">5350</span>,<span class="number">9827</span>,<span class="number">5445</span>,<span class="number">6970</span>,<span class="number">2599</span>,<span class="number">7566</span>,<span class="number">2848</span>,<span class="number">2987</span>,<span class="number">5179</span>,<span class="number">1537</span>,<span class="number">2392</span>,<span class="number">6375</span>,<span class="number">9621</span>,<span class="number">7376</span>,<span class="number">3301</span>,<span class="number">1357</span>,<span class="number">6545</span>,<span class="number">7838</span>,<span class="number">9390</span>,<span class="number">4284</span>,<span class="number">2631</span>,<span class="number">1814</span>,<span class="number">2566</span>,<span class="number">7666</span>,<span class="number">1110</span>,<span class="number">5694</span>,<span class="number">7595</span>,<span class="number">5000</span>,<span class="number">1290</span>,<span class="number">4735</span>,</span><br><span class="line"><span class="number">5994</span>,<span class="number">9401</span>,<span class="number">6475</span>,<span class="number">9012</span>,<span class="number">5877</span>,<span class="number">2867</span>,<span class="number">7912</span>,<span class="number">3509</span>,<span class="number">5505</span>,<span class="number">885</span>,<span class="number">7490</span>,<span class="number">5622</span>,<span class="number">4374</span>,<span class="number">8721</span>,<span class="number">5134</span>,<span class="number">8788</span>,<span class="number">5430</span>,<span class="number">3869</span>,<span class="number">9852</span>,<span class="number">5762</span>,<span class="number">75</span>,<span class="number">5964</span>,<span class="number">262</span>,<span class="number">5565</span>,<span class="number">1599</span>,<span class="number">7525</span>,<span class="number">5388</span>,<span class="number">8612</span>,<span class="number">1143</span>,<span class="number">7938</span>,</span><br><span class="line"><span class="number">7580</span>,<span class="number">2953</span>,<span class="number">7901</span>,<span class="number">5629</span>,<span class="number">1456</span>,<span class="number">9852</span>,<span class="number">5216</span>,<span class="number">965</span>,<span class="number">3739</span>,<span class="number">7879</span>,<span class="number">1212</span>,<span class="number">9029</span>,<span class="number">9263</span>,<span class="number">9609</span>,<span class="number">1926</span>,<span class="number">8151</span>,<span class="number">1997</span>,<span class="number">6298</span>,<span class="number">5125</span>,<span class="number">5715</span>,<span class="number">4864</span>,<span class="number">3852</span>,<span class="number">604</span>,<span class="number">7652</span>,<span class="number">313</span>,<span class="number">6248</span>,<span class="number">4077</span>,<span class="number">3875</span>,<span class="number">3816</span>,<span class="number">7046</span>,</span><br><span class="line"><span class="number">9525</span>,<span class="number">3798</span>,<span class="number">6959</span>,<span class="number">9366</span>,<span class="number">2216</span>,<span class="number">4463</span>,<span class="number">6546</span>,<span class="number">6367</span>,<span class="number">614</span>,<span class="number">9477</span>,<span class="number">3176</span>,<span class="number">4098</span>,<span class="number">7162</span>,<span class="number">7535</span>,<span class="number">4696</span>,<span class="number">749</span>,<span class="number">2686</span>,<span class="number">8212</span>,<span class="number">9050</span>,<span class="number">255</span>,<span class="number">1389</span>,<span class="number">287</span>,<span class="number">1086</span>,<span class="number">9414</span>,<span class="number">9897</span>,<span class="number">2293</span>,<span class="number">31</span>,<span class="number">9121</span>,<span class="number">4682</span>,<span class="number">7084</span>,</span><br><span class="line"><span class="number">8951</span>,<span class="number">834</span>,<span class="number">1051</span>,<span class="number">2236</span>,<span class="number">3712</span>,<span class="number">6426</span>,<span class="number">8642</span>,<span class="number">185</span>,<span class="number">785</span>,<span class="number">8162</span>,<span class="number">6015</span>,<span class="number">658</span>,<span class="number">8923</span>,<span class="number">5741</span>,<span class="number">2551</span>,<span class="number">7629</span>,<span class="number">2095</span>,<span class="number">8882</span>,<span class="number">7695</span>,<span class="number">5629</span>,<span class="number">8684</span>,<span class="number">5116</span>,<span class="number">6362</span>,<span class="number">7701</span>,<span class="number">9441</span>,<span class="number">9403</span>,<span class="number">1108</span>,<span class="number">4395</span>,<span class="number">5688</span>,<span class="number">9466</span>,</span><br><span class="line"><span class="number">953</span>,<span class="number">9191</span>,<span class="number">4967</span>,<span class="number">7236</span>,<span class="number">6020</span>,<span class="number">3465</span>,<span class="number">8165</span>,<span class="number">872</span>,<span class="number">4530</span>,<span class="number">3353</span>,<span class="number">7859</span>,<span class="number">1422</span>,<span class="number">1504</span>,<span class="number">6366</span>,<span class="number">126</span>,<span class="number">1246</span>,<span class="number">1530</span>,<span class="number">1777</span>,<span class="number">8970</span>,<span class="number">4590</span>,<span class="number">2195</span>,<span class="number">6920</span>,<span class="number">9086</span>,<span class="number">689</span>,<span class="number">2163</span>,<span class="number">6035</span>,<span class="number">4961</span>,<span class="number">2055</span>,<span class="number">7699</span>,<span class="number">4121</span>,</span><br><span class="line"><span class="number">3971</span>,<span class="number">1824</span>,<span class="number">3707</span>,<span class="number">4405</span>,<span class="number">854</span>,<span class="number">6088</span>,<span class="number">6971</span>,<span class="number">1679</span>,<span class="number">1779</span>,<span class="number">7097</span>,<span class="number">5696</span>,<span class="number">2449</span>,<span class="number">2104</span>,<span class="number">3264</span>,<span class="number">796</span>,<span class="number">8595</span>,<span class="number">6183</span>,<span class="number">26</span>,<span class="number">5597</span>,<span class="number">7295</span>,<span class="number">5926</span>,<span class="number">9039</span>,<span class="number">4550</span>,<span class="number">9601</span>,<span class="number">5959</span>,<span class="number">3244</span>,<span class="number">7451</span>,<span class="number">5641</span>,<span class="number">2343</span>,<span class="number">6587</span>,</span><br><span class="line"><span class="number">3755</span>,<span class="number">4361</span>,<span class="number">3890</span>,<span class="number">446</span>,<span class="number">8187</span>,<span class="number">1979</span>,<span class="number">7000</span>,<span class="number">7094</span>,<span class="number">8658</span>,<span class="number">1647</span>,<span class="number">6090</span>,<span class="number">8332</span>,<span class="number">4407</span>,<span class="number">4570</span>,<span class="number">2340</span>,<span class="number">3057</span>,<span class="number">5029</span>,<span class="number">5424</span>,<span class="number">2736</span>,<span class="number">4844</span>,<span class="number">2771</span>,<span class="number">5782</span>,<span class="number">5912</span>,<span class="number">3745</span>,<span class="number">2504</span>,<span class="number">2782</span>,<span class="number">7247</span>,<span class="number">1393</span>,<span class="number">5403</span>,<span class="number">7175</span>,</span><br><span class="line"><span class="number">9903</span>,<span class="number">1723</span>,<span class="number">7600</span>,<span class="number">7021</span>,<span class="number">4566</span>,<span class="number">9778</span>,<span class="number">5188</span>,<span class="number">46</span>,<span class="number">8542</span>,<span class="number">7915</span>,<span class="number">5043</span>,<span class="number">4983</span>,<span class="number">519</span>,<span class="number">480</span>,<span class="number">8199</span>,<span class="number">1141</span>,<span class="number">73</span>,<span class="number">9316</span>,<span class="number">6248</span>,<span class="number">966</span>,<span class="number">3218</span>,<span class="number">6614</span>,<span class="number">6974</span>,<span class="number">5078</span>,<span class="number">9775</span>,<span class="number">7263</span>,<span class="number">6263</span>,<span class="number">7267</span>,<span class="number">1947</span>,<span class="number">5357</span>,</span><br><span class="line"><span class="number">286</span>,<span class="number">674</span>,<span class="number">3876</span>,<span class="number">1985</span>,<span class="number">4731</span>,<span class="number">1850</span>,<span class="number">512</span>,<span class="number">1493</span>,<span class="number">5310</span>,<span class="number">5443</span>,<span class="number">4183</span>,<span class="number">5963</span>,<span class="number">8642</span>,<span class="number">1389</span>,<span class="number">6320</span>,<span class="number">4264</span>,<span class="number">9565</span>,<span class="number">7348</span>,<span class="number">4378</span>,<span class="number">6192</span>,<span class="number">1300</span>,<span class="number">3393</span>,<span class="number">4794</span>,<span class="number">8323</span>,<span class="number">6063</span>,<span class="number">9651</span>,<span class="number">9368</span>,<span class="number">7899</span>,<span class="number">9053</span>,<span class="number">4933</span>,</span><br><span class="line"><span class="number">5140</span>,<span class="number">5604</span>,<span class="number">9114</span>,<span class="number">9299</span>,<span class="number">7603</span>,<span class="number">2485</span>,<span class="number">884</span>,<span class="number">7313</span>,<span class="number">4139</span>,<span class="number">9883</span>,<span class="number">1405</span>,<span class="number">9843</span>,<span class="number">7419</span>,<span class="number">1483</span>,<span class="number">2031</span>,<span class="number">8610</span>,<span class="number">4150</span>,<span class="number">3313</span>,<span class="number">6257</span>,<span class="number">3790</span>,<span class="number">1688</span>,<span class="number">994</span>,<span class="number">1357</span>,<span class="number">9660</span>,<span class="number">583</span>,<span class="number">5735</span>,<span class="number">1548</span>,<span class="number">7156</span>,<span class="number">9678</span>,<span class="number">8047</span>,</span><br><span class="line"><span class="number">3617</span>,<span class="number">9611</span>,<span class="number">7966</span>,<span class="number">7764</span>,<span class="number">5177</span>,<span class="number">7716</span>,<span class="number">4206</span>,<span class="number">7985</span>,<span class="number">6989</span>,<span class="number">6318</span>,<span class="number">5854</span>,<span class="number">8292</span>,<span class="number">9639</span>,<span class="number">687</span>,<span class="number">370</span>,<span class="number">3252</span>,<span class="number">7104</span>,<span class="number">5813</span>,<span class="number">758</span>,<span class="number">8219</span>,<span class="number">3809</span>,<span class="number">2506</span>,<span class="number">3605</span>,<span class="number">9340</span>,<span class="number">3559</span>,<span class="number">4118</span>,<span class="number">4757</span>,<span class="number">8229</span>,<span class="number">4258</span>,<span class="number">944</span>,</span><br><span class="line"><span class="number">1596</span>,<span class="number">4940</span>,<span class="number">622</span>,<span class="number">5832</span>,<span class="number">1270</span>,<span class="number">6948</span>,<span class="number">1744</span>,<span class="number">1125</span>,<span class="number">7895</span>,<span class="number">9348</span>,<span class="number">7601</span>,<span class="number">7426</span>,<span class="number">1975</span>,<span class="number">9611</span>,<span class="number">3722</span>,<span class="number">4143</span>,<span class="number">4979</span>,<span class="number">7904</span>,<span class="number">3221</span>,<span class="number">3817</span>,<span class="number">5755</span>,<span class="number">1798</span>,<span class="number">6549</span>,<span class="number">3463</span>,<span class="number">3190</span>,<span class="number">201</span>,<span class="number">6894</span>,<span class="number">6209</span>,<span class="number">3488</span>,<span class="number">670</span>,</span><br><span class="line"><span class="number">7643</span>,<span class="number">7020</span>,<span class="number">6164</span>,<span class="number">5583</span>,<span class="number">5036</span>,<span class="number">6309</span>,<span class="number">8644</span>,<span class="number">7961</span>,<span class="number">3465</span>,<span class="number">7795</span>,<span class="number">1486</span>,<span class="number">4535</span>,<span class="number">3111</span>,<span class="number">5252</span>,<span class="number">4049</span>,<span class="number">4253</span>,<span class="number">7515</span>,<span class="number">1517</span>,<span class="number">6148</span>,<span class="number">2438</span>,<span class="number">1296</span>,<span class="number">8826</span>,<span class="number">7924</span>,<span class="number">7761</span>,<span class="number">9126</span>,<span class="number">6951</span>,<span class="number">7110</span>,<span class="number">7549</span>,<span class="number">1170</span>,<span class="number">8533</span>,</span><br><span class="line"><span class="number">793</span>,<span class="number">1633</span>,<span class="number">6451</span>,<span class="number">6261</span>,<span class="number">5887</span>,<span class="number">8694</span>,<span class="number">6447</span>,<span class="number">8993</span>,<span class="number">6398</span>,<span class="number">1289</span>,<span class="number">2925</span>,<span class="number">2362</span>,<span class="number">3935</span>,<span class="number">6744</span>,<span class="number">1358</span>,<span class="number">1743</span>,<span class="number">3937</span>,<span class="number">9942</span>,<span class="number">3696</span>,<span class="number">1601</span>,<span class="number">8295</span>,<span class="number">3086</span>,<span class="number">2595</span>,<span class="number">9554</span>,<span class="number">8566</span>,<span class="number">1465</span>,<span class="number">2109</span>,<span class="number">3474</span>,<span class="number">3950</span>,<span class="number">9216</span>,</span><br><span class="line"><span class="number">8948</span>,<span class="number">2020</span>,<span class="number">3536</span>,<span class="number">943</span>,<span class="number">4934</span>,<span class="number">8377</span>,<span class="number">6171</span>,<span class="number">1243</span>,<span class="number">3525</span>,<span class="number">259</span>,<span class="number">3001</span>,<span class="number">4205</span>,<span class="number">4548</span>,<span class="number">4754</span>,<span class="number">2365</span>,<span class="number">8630</span>,<span class="number">4690</span>,<span class="number">7872</span>,<span class="number">5131</span>,<span class="number">3995</span>,<span class="number">2672</span>,<span class="number">728</span>,<span class="number">6532</span>,<span class="number">9785</span>,<span class="number">9379</span>,<span class="number">5865</span>,<span class="number">4774</span>,<span class="number">6660</span>,<span class="number">3721</span>,<span class="number">4451</span>,</span><br><span class="line"><span class="number">9085</span>,<span class="number">4771</span>,<span class="number">8008</span>,<span class="number">857</span>,<span class="number">9737</span>,<span class="number">5630</span>,<span class="number">4040</span>,<span class="number">3106</span>,<span class="number">5997</span>,<span class="number">4152</span>,<span class="number">8542</span>,<span class="number">3992</span>,<span class="number">3294</span>,<span class="number">5064</span>,<span class="number">2656</span>,<span class="number">5247</span>,<span class="number">635</span>,<span class="number">1521</span>,<span class="number">3026</span>,<span class="number">1502</span>,<span class="number">9396</span>,<span class="number">2171</span>,<span class="number">7188</span>,<span class="number">2425</span>,<span class="number">9758</span>,<span class="number">2640</span>,<span class="number">8648</span>,<span class="number">9454</span>,<span class="number">274</span>,<span class="number">9471</span>,</span><br><span class="line"><span class="number">8972</span>,<span class="number">9301</span>,<span class="number">911</span>,<span class="number">6023</span>,<span class="number">4155</span>,<span class="number">126</span>,<span class="number">7802</span>,<span class="number">2948</span>,<span class="number">5675</span>,<span class="number">6313</span>,<span class="number">69</span>,<span class="number">1374</span>,<span class="number">9925</span>,<span class="number">3685</span>,<span class="number">6901</span>,<span class="number">432</span>,<span class="number">1884</span>,<span class="number">4803</span>,<span class="number">8173</span>,<span class="number">9638</span>,<span class="number">3626</span>,<span class="number">695</span>,<span class="number">4286</span>,<span class="number">3836</span>,<span class="number">8670</span>,<span class="number">8834</span>,<span class="number">1444</span>,<span class="number">5187</span>,<span class="number">6281</span>,<span class="number">2482</span>,</span><br><span class="line"><span class="number">8801</span>,<span class="number">7656</span>,<span class="number">9066</span>,<span class="number">5138</span>,<span class="number">5160</span>,<span class="number">9857</span>,<span class="number">906</span>,<span class="number">5235</span>,<span class="number">7243</span>,<span class="number">5281</span>,<span class="number">5103</span>,<span class="number">5826</span>,<span class="number">5023</span>,<span class="number">3637</span>,<span class="number">5607</span>,<span class="number">1204</span>,<span class="number">5697</span>,<span class="number">3422</span>,<span class="number">1192</span>,<span class="number">8753</span>,<span class="number">6087</span>,<span class="number">2083</span>,<span class="number">3256</span>,<span class="number">8201</span>,<span class="number">9853</span>,<span class="number">1886</span>,<span class="number">3953</span>,<span class="number">4732</span>,<span class="number">7351</span>,<span class="number">6387</span>,</span><br><span class="line"><span class="number">9148</span>,<span class="number">2299</span>,<span class="number">4843</span>,<span class="number">3891</span>,<span class="number">3572</span>,<span class="number">874</span>,<span class="number">9873</span>,<span class="number">1235</span>,<span class="number">7323</span>,<span class="number">8860</span>,<span class="number">3439</span>,<span class="number">113</span>,<span class="number">5132</span>,<span class="number">6521</span>,<span class="number">1234</span>,<span class="number">7427</span>,<span class="number">4062</span>,<span class="number">1342</span>,<span class="number">2480</span>,<span class="number">641</span>,<span class="number">8802</span>,<span class="number">9788</span>,<span class="number">5336</span>,<span class="number">3649</span>,<span class="number">1301</span>,<span class="number">3268</span>,<span class="number">749</span>,<span class="number">1628</span>,<span class="number">9202</span>,<span class="number">2689</span>,</span><br><span class="line"><span class="number">3284</span>,<span class="number">9170</span>,<span class="number">5252</span>,<span class="number">1577</span>,<span class="number">1705</span>,<span class="number">5640</span>,<span class="number">2185</span>,<span class="number">2252</span>,<span class="number">4943</span>,<span class="number">271</span>,<span class="number">5117</span>,<span class="number">8699</span>,<span class="number">2743</span>,<span class="number">8221</span>,<span class="number">2119</span>,<span class="number">3851</span>,<span class="number">701</span>,<span class="number">2740</span>,<span class="number">4247</span>,<span class="number">7037</span>,<span class="number">9764</span>,<span class="number">4445</span>,<span class="number">5848</span>,<span class="number">6135</span>,<span class="number">6166</span>,<span class="number">5328</span>,<span class="number">2584</span>,<span class="number">1131</span>,<span class="number">3005</span>,<span class="number">8817</span>,</span><br><span class="line"><span class="number">2783</span>,<span class="number">7749</span>,<span class="number">6112</span>,<span class="number">5567</span>,<span class="number">9688</span>,<span class="number">2549</span>,<span class="number">7929</span>,<span class="number">8650</span>,<span class="number">60</span>,<span class="number">1896</span>,<span class="number">3998</span>,<span class="number">7345</span>,<span class="number">3352</span>,<span class="number">8990</span>,<span class="number">1143</span>,<span class="number">873</span>,<span class="number">1191</span>,<span class="number">5821</span>,<span class="number">9485</span>,<span class="number">5249</span>,<span class="number">3086</span>,<span class="number">8016</span>,<span class="number">9319</span>,<span class="number">4139</span>,<span class="number">3566</span>,<span class="number">8871</span>,<span class="number">7528</span>,<span class="number">7873</span>,<span class="number">4117</span>,<span class="number">1085</span>,</span><br><span class="line"><span class="number">7064</span>,<span class="number">8222</span>,<span class="number">5947</span>,<span class="number">4447</span>,<span class="number">1326</span>,<span class="number">5206</span>,<span class="number">12</span>,<span class="number">9703</span>,<span class="number">5711</span>,<span class="number">3951</span>,<span class="number">219</span>,<span class="number">6966</span>,<span class="number">3168</span>,<span class="number">2372</span>,<span class="number">9603</span>,<span class="number">9092</span>,<span class="number">1904</span>,<span class="number">1010</span>,<span class="number">2704</span>,<span class="number">2106</span>,<span class="number">7568</span>,<span class="number">3410</span>,<span class="number">296</span>,<span class="number">6825</span>,<span class="number">9781</span>,<span class="number">637</span>,<span class="number">4465</span>,<span class="number">7953</span>,<span class="number">6861</span>,<span class="number">2142</span>,</span><br><span class="line"><span class="number">2035</span>,<span class="number">9743</span>,<span class="number">1921</span>,<span class="number">3051</span>,<span class="number">7424</span>,<span class="number">7112</span>,<span class="number">7676</span>,<span class="number">5245</span>,<span class="number">9531</span>,<span class="number">2284</span>,<span class="number">4498</span>,<span class="number">6423</span>,<span class="number">6977</span>,<span class="number">3106</span>,<span class="number">1367</span>,<span class="number">5696</span>,<span class="number">2003</span>,<span class="number">1291</span>,<span class="number">3025</span>,<span class="number">76</span>,<span class="number">3147</span>,<span class="number">9094</span>,<span class="number">4580</span>,<span class="number">5097</span>,<span class="number">7390</span>,<span class="number">8637</span>,<span class="number">5853</span>,<span class="number">359</span>,<span class="number">3153</span>,<span class="number">4957</span>,</span><br><span class="line"><span class="number">6635</span>,<span class="number">5721</span>,<span class="number">3353</span>,<span class="number">2266</span>,<span class="number">3481</span>,<span class="number">7432</span>,<span class="number">3020</span>,<span class="number">7330</span>,<span class="number">1172</span>,<span class="number">5285</span>,<span class="number">1525</span>,<span class="number">2928</span>,<span class="number">5331</span>,<span class="number">8856</span>,<span class="number">2163</span>,<span class="number">5169</span>,<span class="number">1465</span>,<span class="number">4439</span>,<span class="number">1876</span>,<span class="number">7446</span>,<span class="number">2192</span>,<span class="number">5577</span>,<span class="number">726</span>,<span class="number">6599</span>,<span class="number">352</span>,<span class="number">3645</span>,<span class="number">7733</span>,<span class="number">8331</span>,<span class="number">5447</span>,<span class="number">8017</span>,</span><br><span class="line"><span class="number">5017</span>,<span class="number">7287</span>,<span class="number">6602</span>,<span class="number">7248</span>,<span class="number">6323</span>,<span class="number">4195</span>,<span class="number">9617</span>,<span class="number">2263</span>,<span class="number">4013</span>,<span class="number">450</span>,<span class="number">4073</span>,<span class="number">6131</span>,<span class="number">3569</span>,<span class="number">9019</span>,<span class="number">1858</span>,<span class="number">9827</span>,<span class="number">8118</span>,<span class="number">4972</span>,<span class="number">7422</span>,<span class="number">9666</span>,<span class="number">5760</span>,<span class="number">9213</span>,<span class="number">2817</span>,<span class="number">7952</span>,<span class="number">3948</span>,<span class="number">8683</span>,<span class="number">3645</span>,<span class="number">6402</span>,<span class="number">3264</span>,<span class="number">1919</span>,</span><br><span class="line"><span class="number">9276</span>,<span class="number">2519</span>,<span class="number">190</span>,<span class="number">766</span>,<span class="number">8940</span>,<span class="number">3413</span>,<span class="number">2644</span>,<span class="number">8048</span>,<span class="number">83</span>,<span class="number">9724</span>,<span class="number">7009</span>,<span class="number">3777</span>,<span class="number">9663</span>,<span class="number">2483</span>,<span class="number">5752</span>,<span class="number">4578</span>,<span class="number">8951</span>,<span class="number">5902</span>,<span class="number">2170</span>,<span class="number">9967</span>,<span class="number">894</span>,<span class="number">8556</span>,<span class="number">6049</span>,<span class="number">7254</span>,<span class="number">2746</span>,<span class="number">8962</span>,<span class="number">8317</span>,<span class="number">6848</span>,<span class="number">767</span>,<span class="number">7907</span>,</span><br><span class="line"><span class="number">1028</span>,<span class="number">9458</span>,<span class="number">6881</span>,<span class="number">4978</span>,<span class="number">6717</span>,<span class="number">8210</span>,<span class="number">3835</span>,<span class="number">1064</span>,<span class="number">7434</span>,<span class="number">746</span>,<span class="number">9449</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10"><a href="#10" class="headerlink" title="10"></a>10</h2><p>这是一个典型的贪心题，每次选m个，则一定是挑前m大的那几个数，但顺序不难打乱了。<br>这个题hash，vector，结构体数组好像都能过，我感觉还是set好用，代码特短。<br>思路：用两个vector容器存两个数组，然后一个存原始的数组，一个存排好序的数组（由大到小排序），然后将排好序的前m个元素放到set中，然后从原始数组中开始查找，看这个出现在set中没，如果出现则输出。<br>总复杂度，排序是nlogn，然后查找是logm，所以后面复杂度为nlogm，总复杂度为nlogn+nlogm，应该不会被tle吧，不是特别暴力</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIS std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v,st;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SIS;</span><br><span class="line"><span class="comment">//加速cin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">v.push_back(t);</span><br><span class="line">st.push_back(t);</span><br><span class="line">&#125;</span><br><span class="line">sort(st.begin(),st.end(),cmp);</span><br><span class="line">rep(i,<span class="number">0</span>,m<span class="number">-1</span>)&#123;</span><br><span class="line">s.insert(st[i]);</span><br><span class="line">&#125;</span><br><span class="line">rep(i,<span class="number">0</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(s.count(v[i])==<span class="number">1</span>)</span><br><span class="line">pf(<span class="string">"%d "</span>,v[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>*<em>小结：此次校内赛，让我昨晚cf卡c题那个痛苦稍微缓解了一下，<del>也证明了多打游戏手速会更快</del>这个划掉，然后这次第9题稍微卡了一下，说明回溯还是得练习练习，还有好几个题比如9，10好像都可以st表过，可惜我线段树，st表不是太会，还是得练习啊，多打游戏，热爱生活，我tcl…… *</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;蓝桥校内训练赛的总结&lt;/p&gt;
&lt;h2 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
    
    
      <category term="c++ match" scheme="http://yoursite.com/tags/c-match/"/>
    
  </entry>
  
  <entry>
    <title>cf 672 div3 2020-3-12 (1)</title>
    <link href="http://yoursite.com/2020/03/14/cf%20672%20div3%202020-3-12%20(1)/"/>
    <id>http://yoursite.com/2020/03/14/cf%20672%20div3%202020-3-12%20(1)/</id>
    <published>2020-03-14T10:11:22.902Z</published>
    <updated>2020-03-14T10:11:22.903Z</updated>
    
    <content type="html"><![CDATA[<p>手速拉满后，迅速秒了2道题，之后第三题，有个if没有包含if里头的语句，一直找bug没有找出来，最后差点崩溃，最后卡了10～20分钟后还是找出来了。<strong>(傻逼了）</strong>第四题ai+aj&gt;bi+bj，可以转换下题意稍微变形ai-bi&gt;bj-aj;然后再次变换ai-bi+(aj-bj)&gt;0，好了，这样进行双指针，首尾一直扫就行了。。。一位老弟把LL定义在了局部，出bug了，最后还是让我找出问题来了。当时第四题我也没开LL也被t了一发(WA12)，因为emmm它值为10^9范围，超出了int的范围了。血的代价，注意开整型，<strong>printf(“%lld\n”);</strong>以下是题解。</p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>每次可以加一个1X2的小块进去，然后进行消除，我的沙雕做法是判断所有的两个之差为偶则可消除，<strong>刚看到大佬做法，只判断奇偶也可以，想来也是，判断没一列的奇偶，要么全奇，要么全偶，才有可能做差为偶</strong>。以下是ac代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> t,sum,n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">rep(i,<span class="number">1</span>,x)&#123;</span><br><span class="line">rep(j,i+<span class="number">1</span>,x)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(a[i]-a[j])%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stido(0);</span></span><br><span class="line"><span class="comment">//¼ÓËÙcin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">rep(k,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(pd(n))</span><br><span class="line">pf(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pf(<span class="string">"NO\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>判断回文子序列，若某个数出现次数&gt;=3，则必是回文子序列，若某个数字出现两次，且这个数字出现两次的位置不相邻，则也是回文子序列，<strong>骄傲的ac了一发。。。</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> t,n,flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5007</span>],b[<span class="number">5007</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stido(0);</span></span><br><span class="line"><span class="comment">//加速cin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">b[a[i]]++;</span><br><span class="line"><span class="keyword">if</span>(b[a[i]]==<span class="number">2</span> &amp;&amp; a[i]!=a[i<span class="number">-1</span>] &amp;&amp; a[i]!=a[i+<span class="number">1</span>])</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(b[a[i]]&gt;<span class="number">2</span>)</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line">pf(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pf(<span class="string">"NO\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>C题是寻找最小跳的步幅，所以找到r可以停留，然后判断两个r之间的最大距离就行，然后最后判断一下n+1和找到的最右边的r的距离与最大距离再次比较一次，然后即为所求。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> t,maxn=<span class="number">1</span>,k,l,r,flag=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stido(0);</span></span><br><span class="line"><span class="comment">//¼ÓËÙcin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">s=s+<span class="string">"R"</span>;</span><br><span class="line">l=<span class="number">0</span>;maxn=<span class="number">1</span>;flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'R'</span>)&#123;</span><br><span class="line">l=i;</span><br><span class="line">maxn=l+<span class="number">1</span>;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'R'</span>)</span><br><span class="line">&#123;</span><br><span class="line">maxn=max(maxn,i-l);</span><br><span class="line">l=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">pf(<span class="string">"%d\n"</span>,maxn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>详细思路开头已经描述了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sc(x) scanf(<span class="meta-string">"%lld"</span>,&amp;x);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,s,e) for(int i=s;i&lt;=e;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dep(i,e,s) for(int i=e;i&gt;=s;i--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">5e5</span>;</span><br><span class="line"><span class="keyword">int</span> n,l,r;</span><br><span class="line">LL a[maxn],b[maxn],c[maxn],ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stido(0);</span></span><br><span class="line"><span class="comment">//加速cin/cout</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">c[i]=a[i]-b[i];</span><br><span class="line">&#125;</span><br><span class="line">sort(c+<span class="number">1</span>,c+<span class="number">1</span>+n);</span><br><span class="line">l=<span class="number">1</span>;r=n;</span><br><span class="line"><span class="keyword">while</span>(r&gt;l)&#123;</span><br><span class="line"><span class="keyword">if</span>(c[r]+c[l]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">ans=ans+r-l;</span><br><span class="line">r--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">pf(<span class="string">"%lld"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>下面是<del>枯燥却</del> 有趣的补题环节了</strong></p><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>//呜呜呜DP不会……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;手速拉满后，迅速秒了2道题，之后第三题，有个if没有包含if里头的语句，一直找bug没有找出来，最后差点崩溃，最后卡了10～20分钟后还是找出来了。&lt;strong&gt;(傻逼了）&lt;/strong&gt;第四题ai+aj&amp;gt;bi+bj，可以转换下题意稍微变形ai-bi&amp;gt;bj-
      
    
    </summary>
    
    
      <category term="algorithm" scheme="http://yoursite.com/categories/algorithm/"/>
    
    
      <category term="c++ match" scheme="http://yoursite.com/tags/c-match/"/>
    
  </entry>
  
  <entry>
    <title>郭某人的第一篇博客——关于水高精</title>
    <link href="http://yoursite.com/2020/03/12/%E9%83%AD%E6%9F%90%E4%BA%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8E%E6%B0%B4%E9%AB%98%E7%B2%BE/"/>
    <id>http://yoursite.com/2020/03/12/%E9%83%AD%E6%9F%90%E4%BA%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8E%E6%B0%B4%E9%AB%98%E7%B2%BE/</id>
    <published>2020-03-12T04:08:39.333Z</published>
    <updated>2020-03-12T04:08:39.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="python打表很友好，是在不行直接python水"><a href="#python打表很友好，是在不行直接python水" class="headerlink" title="python打表很友好，是在不行直接python水"></a><del>python打表很友好，是在不行直接python水</del></h2><h2 id="以上只是个人bb。。。进入主题"><a href="#以上只是个人bb。。。进入主题" class="headerlink" title="以上只是个人bb。。。进入主题"></a>以上只是个人bb。。。进入主题</h2><p>高精度主要就是模拟，<strong>小学数学中的进位</strong>，这个划重点，然后最后注意处理前缀0就ok了，以下是个人总结的高精代码。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1010</span>;</span><br><span class="line"><span class="built_in">string</span> s1,s2;</span><br><span class="line"><span class="comment">//高精度读入 </span></span><br><span class="line"><span class="comment">//高精度算法一般是数组下标为0则存个位数 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="built_in">string</span> s,<span class="keyword">int</span> *a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">reverse(s.begin(),s.end());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();i++)</span><br><span class="line">a[i]=s[i]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//高精度输出 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=len;</span><br><span class="line"><span class="keyword">while</span>(a[i]==<span class="number">0</span>) i--;</span><br><span class="line"><span class="keyword">for</span>(;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//高精度比较大小 way1直接比较字符串</span></span><br><span class="line"><span class="comment">//返回值为1说明s1大，-1说明s1小，0表示相等 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pd1</span><span class="params">(<span class="built_in">string</span> s1,<span class="built_in">string</span> s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s1.size()!=s2.size())</span><br><span class="line"><span class="keyword">return</span> s1.size()&gt;s2.size() ? <span class="number">1</span>:<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s1==s2)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s1.size();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t=s1[i]-s2[i];</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t&gt;<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t&lt;<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//高精度比较大小 way2比较数组 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pd2</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> len_a,<span class="keyword">int</span> *b,<span class="keyword">int</span> len_b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(len_a!=len_b)</span><br><span class="line"><span class="keyword">return</span> len_a&gt;len_b ? <span class="number">1</span>:<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len_a<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==b[i])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> a[i]&gt;b[i] ? <span class="number">1</span>:<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> len_a,<span class="keyword">int</span> *b,<span class="keyword">int</span> len_b,<span class="keyword">int</span> *ans)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(len_a&lt;len_b) <span class="keyword">return</span> add(b,len_b,a,len_a,ans);</span><br><span class="line"><span class="keyword">int</span> temp[maxn+<span class="number">1</span>],t=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len_a;i++)</span><br><span class="line">&#123;</span><br><span class="line">t+=a[i];</span><br><span class="line"><span class="keyword">if</span>(i&lt;len_b) t+=b[i];</span><br><span class="line">ans[i]=t%<span class="number">10</span>;</span><br><span class="line">t/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">0</span>)&#123;</span><br><span class="line">ans[len_a]=t;</span><br><span class="line"><span class="keyword">return</span> len_a+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> len_a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//个人想法，配合pd函数，事半公倍 </span></span><br><span class="line"><span class="comment">//a-b，限制条件且a&gt;=b </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> len_a,<span class="keyword">int</span> *b,<span class="keyword">int</span> len_b,<span class="keyword">int</span> *ans)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tt[maxn];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len_a<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">tt[i]=a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len_a;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i&gt;=len_b)&#123;</span><br><span class="line"><span class="keyword">if</span>(tt[i]&gt;=<span class="number">0</span>)</span><br><span class="line">ans[i]=tt[i];</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">ans[i]=tt[i]+<span class="number">10</span>;</span><br><span class="line">tt[i+<span class="number">1</span>]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">t=tt[i]-b[i];</span><br><span class="line"><span class="keyword">if</span>(t&gt;=<span class="number">0</span>)</span><br><span class="line">ans[i]=t;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">tt[i+<span class="number">1</span>]--;</span><br><span class="line">ans[i]=t+<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> len_a,<span class="keyword">int</span> *b,<span class="keyword">int</span> len_b,<span class="keyword">int</span> *ans)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len_a;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len_b;j++)</span><br><span class="line">ans[i+j]+=a[i]*b[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len_a+len_b;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ans[i]&gt;=<span class="number">10</span>)</span><br><span class="line">&#123;<span class="comment">//关键步骤，进位(我是一个不晓得如何压位的弟弟) </span></span><br><span class="line">ans[i+<span class="number">1</span>]+=ans[i]/<span class="number">10</span>;</span><br><span class="line">ans[i]%=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//高精度除以低精度，并返回余数 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">div1</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> len_a,LL k,LL &amp;r,<span class="keyword">int</span> *ans)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">r=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len_a<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">r=r*<span class="number">10</span>+a[i];</span><br><span class="line">ans[i]=r/k;</span><br><span class="line">r%=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">2</span>*maxn];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s1&gt;&gt;s2;</span><br><span class="line">read(s1,a);</span><br><span class="line">read(s2,b);</span><br><span class="line"><span class="keyword">int</span> len_a=s1.size(),len_b=s2.size();</span><br><span class="line"><span class="keyword">int</span> ans[maxn+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> ans2[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> k=add(a,s1.size(),b,s2.size(),ans);</span><br><span class="line">print(ans,k);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//sub(a,b) a-b</span></span><br><span class="line"><span class="keyword">if</span>(pd2(a,len_a,b,len_b)==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sub(a,len_a,b,len_b,ans2);</span><br><span class="line">print(ans2,len_a);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(pd2(a,len_a,b,len_b)==<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sub(b,len_b,a,len_a,ans2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line">print(ans2,len_b);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">4</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">4</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,b[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">print(a,len_a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">print(b,len_b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//mul(a,b)</span></span><br><span class="line"><span class="keyword">int</span> ans3[<span class="number">2</span>*maxn];</span><br><span class="line">mul(a,len_a,b,len_b,ans3);</span><br><span class="line">print(ans3,len_a+len_b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(pd1(s1,s2)==<span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"s1&gt;s2\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pd1(s1,s2)==<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"s1&lt;s2\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"s1==s2\n"</span>);</span><br><span class="line"></span><br><span class="line">print(a,s1.size());</span><br><span class="line">print(b,s2.size());</span><br><span class="line"><span class="keyword">if</span>(pd2(a,s1.size(),b,s2.size())==<span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"s1&gt;s2\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pd2(a,s1.size(),b,s2.size())==<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"s1&lt;s2\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"s1==s2\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans4[maxn];</span><br><span class="line">LL kk=<span class="number">12</span>,r;</span><br><span class="line">div1(a,len_a,kk,r,ans4);</span><br><span class="line">print(ans4,len_a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n%lld\n"</span>,r);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;python打表很友好，是在不行直接python水&quot;&gt;&lt;a href=&quot;#python打表很友好，是在不行直接python水&quot; class=&quot;headerlink&quot; title=&quot;python打表很友好，是在不行直接python水&quot;&gt;&lt;/a&gt;&lt;del&gt;python
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
